<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hello World</title>
    <link>https://zynismus16.github.io/</link>
    <description>Recent content on Hello World</description>
    <image>
      <title>Hello World</title>
      <url>https://zynismus16.github.io/papermod-cover.png</url>
      <link>https://zynismus16.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 18 Apr 2023 08:50:00 +0000</lastBuildDate><atom:link href="https://zynismus16.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>升级局域网并安装群晖nas</title>
      <link>https://zynismus16.github.io/posts/110/</link>
      <pubDate>Tue, 18 Apr 2023 08:50:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/110/</guid>
      <description>DayN 越来越忙，前几天查看论坛发现，其实目前组的raid1机械硬盘存储库最快也就200MB，因为是同时拷贝同一份文件到两块硬盘，就算加了SSD缓</description>
      <content:encoded><![CDATA[<h1 id="dayn">DayN</h1>
<p>越来越忙，前几天查看论坛发现，其实目前组的raid1机械硬盘存储库最快也就200MB，因为是同时拷贝同一份文件到两块硬盘，就算加了SSD缓存等SSD缓存的空间用完还是会降速到机械硬盘的速度（因为缓存用完后群晖会将文件直接写入存储池）。
而测试群晖ssd缓存的回写速度最快才10~MB/S。 谢特！
想在现在的基础上加速，只能更换读写速度更快的存储设备或者更改为raid10(在raid1的基础上应用raid0组成条带空间。一份文件会被切分成多份存储到不同硬盘中，这样同时写入的理论速度将会成倍增加).
先这样吧，等老板回来后再给他说，看他升不升级。</p>
<h1 id="day8">Day8</h1>
<p>今日将将所有硬盘取出手动降级dsm到6.2.4，终于看见了跳过连续IO选项，遂取消勾选。再次测试，哦豁，虽然是在往缓存中写入数据了，不过速度还是依旧200多MB，下载倒是快了，最快的可以达到1GB每秒。先这样。</p>
<p>堆叠线也到了，刚好插上测试电脑对接的模块及线的问题&hellip;.</p>
<p>哦豁，速度还是只有200多MB，排除光模块及线的问题，现在需要去找电脑或者网卡的问题，不过我也注意到一点，在这两台特别慢的电脑上，如果对该电脑进行网络写操作，电脑将变的很卡，虽然在任务管理器中监视设备性能并没有发现短板，但是卡顿现象确实发生了，对比不卡的电脑，除了硬件不一致外操作系统也没更新，晚上更新下系统试试。</p>
<h1 id="day7">Day7</h1>
<p>工作繁忙，暂时无暇顾及网络，暂时搁置问题排查，等前两天买的成品万兆堆叠线到货后再次短接测试。排除线材及光模块的问题。
上班时想到查看硬盘写入，遂打开群晖资源管理对硬盘写入进行监控，同时拷贝文件到相应存储池，发现缓存完全不参与。
沟通群晖官方，DSM7+无法缓存连续IO，哦豁&hellip;
手动降级安装dsm6版本。</p>
<h1 id="day6">Day6</h1>
<p>怀疑部分硬件问题，尝试将两台电脑对接，使用iperf及smb文件传输测速。OMG！速度不达标，还是只有200MB/S。
继续查找问题所在&hellip;&hellip;</p>
<h1 id="day5">Day5</h1>
<p>网卡到货，安装测试。
好家伙，速度没有丝毫提升，开始头疼。
对网卡属性进行配置，开巨型帧，关传输缓存，关闭远程分差api。无效果。
用最高配置电脑使用Homebox测速，能跑满宽带。iperf还是无法跑满宽带。</p>
<h1 id="day4">Day4</h1>
<p>查找了一天的问题，发现买的网卡是pcie x8的，电脑的pcie是x4的，怀疑可能是带宽不够，看到一块tp的tl-nt521f单口万兆网卡，购买等到货。</p>
<h1 id="day3">Day3</h1>
<p>所有光纤全部到位，开始安装硬件设备，先安装三台电脑的万兆网卡，安装路由器及相关光模块。
安装群晖nas硬盘，配置两块m2做RAID1缓存阵列，两块16T硬盘做RAID1数据盘。
<strong>对局域网宽带测速</strong>
问题来了，不管用iperf测试还是smb本地文件传输均无法达到万兆，最大速度才200MB/S。开始找问题。</p>
<h1 id="day2">Day2</h1>
<p>硬件基本到货，开始安装。
先把光纤走好，下午请宽带运营商师傅来进行熔纤。</p>
<h1 id="day1">Day1</h1>
<p>配件陆陆续续到货，暂时无法安装。</p>
<h1 id="起因">起因</h1>
<p>由于公司存储视频素材的硬盘坏的很快，所以计划购买群晖NAS做素材仓库并挂载到电脑进行工程备份。
领导决定使用群晖DS1821+做NAS，购买万兆路由器及相应网卡做万兆局域网。
以下是具体配置单：</p>
<table>
<thead>
<tr>
<th style="text-align:center">定位</th>
<th style="text-align:center">品牌</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">NAS</td>
<td style="text-align:center">群晖DS1821+</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">缓存盘</td>
<td style="text-align:center">致态TiPlus 7100 1TB</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">存储盘</td>
<td style="text-align:center">西数  HC550 16T</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">NAS拓展卡</td>
<td style="text-align:center">intelx520SR1DA2</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">路由器</td>
<td style="text-align:center">TL-R6812TP-AC</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">光模块</td>
<td style="text-align:center">TL-SM512LM-300m</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">跳线</td>
<td style="text-align:center">单模双芯2.0mm</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">光转电口模块</td>
<td style="text-align:center">ZK-10G-TX</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">光纤</td>
<td style="text-align:center">山泽 4芯OM3万兆室内100M</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">ups</td>
<td style="text-align:center">雷迪司H1000M</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">网卡</td>
<td style="text-align:center">万兆通(10Gtek) X520-DA1</td>
<td style="text-align:center">3</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unraid上使用rclone插件挂载网盘</title>
      <link>https://zynismus16.github.io/posts/106/</link>
      <pubDate>Mon, 17 Apr 2023 16:54:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/106/</guid>
      <description>安装rclone插件 应用中搜索rclone 选择这个插件安装,其他两个为docker 安装完成后会出现在设置-用户实用程序中 连接网盘 微软网盘 因U</description>
      <content:encoded><![CDATA[<h3 id="安装rclone插件">安装rclone插件</h3>
<p>应用中搜索<code>rclone</code>
选择这个插件安装,其他两个为docker
安装完成后会出现在<code>设置</code>-<code>用户实用程序</code>中
<img loading="lazy" src="https://cdn.jsdelivr.ren/gh/Zynismus16/Zynismus16@master/picture/2023/04/17/1681721706.png" alt="1681721706.png"  />
</p>
<h3 id="连接网盘">连接网盘</h3>
<p>微软网盘
因Unraid没有浏览器
所以rclone无法直接获取code来连接网盘
我们采用这种的方式来,在windows上获取config内容
下载个客户端
假设解压到c盘根目录</p>
<pre><code>C:\Users\Administrator&gt;cd c:\rclone
</code></pre>
<p>切换到解压目录</p>
<pre><code>c:\rclone&gt;rclone config
</code></pre>
<p>开始配置</p>
<pre><code>No remotes found - make a new one
n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
</code></pre>
<p>选择n新建</p>
<pre><code>name&gt; onedrive
</code></pre>
<p>建立个名称</p>
<pre><code>Type of storage to configure.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / 1Fichier
   \ &quot;fichier&quot;
 2 / Alias for an existing remote
   \ &quot;alias&quot;
 3 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 4 / Amazon S3 Compliant Storage Providers including AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, and Tencent COS
   \ &quot;s3&quot;
 5 / Backblaze B2
   \ &quot;b2&quot;
 6 / Box
   \ &quot;box&quot;
 7 / Cache a remote
   \ &quot;cache&quot;
 8 / Citrix Sharefile
   \ &quot;sharefile&quot;
 9 / Compress a remote
   \ &quot;compress&quot;
10 / Dropbox
   \ &quot;dropbox&quot;
11 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
12 / Enterprise File Fabric
   \ &quot;filefabric&quot;
13 / FTP Connection
   \ &quot;ftp&quot;
14 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
15 / Google Drive
   \ &quot;drive&quot;
16 / Google Photos
   \ &quot;google photos&quot;
17 / Hadoop distributed file system
   \ &quot;hdfs&quot;
18 / Hubic
   \ &quot;hubic&quot;
19 / In memory object storage system.
   \ &quot;memory&quot;
20 / Jottacloud
   \ &quot;jottacloud&quot;
21 / Koofr
   \ &quot;koofr&quot;
22 / Local Disk
   \ &quot;local&quot;
23 / Mail.ru Cloud
   \ &quot;mailru&quot;
24 / Mega
   \ &quot;mega&quot;
25 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
26 / Microsoft OneDrive
   \ &quot;onedrive&quot;
27 / OpenDrive
   \ &quot;opendrive&quot;
28 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
29 / Pcloud
   \ &quot;pcloud&quot;
30 / Put.io
   \ &quot;putio&quot;
31 / QingCloud Object Storage
   \ &quot;qingstor&quot;
32 / SSH/SFTP Connection
   \ &quot;sftp&quot;
33 / Sugarsync
   \ &quot;sugarsync&quot;
34 / Tardigrade Decentralized Cloud Storage
   \ &quot;tardigrade&quot;
35 / Transparently chunk/split large files
   \ &quot;chunker&quot;
36 / Union merges the contents of several upstream fs
   \ &quot;union&quot;
37 / Webdav
   \ &quot;webdav&quot;
38 / Yandex Disk
   \ &quot;yandex&quot;
39 / Zoho
   \ &quot;zoho&quot;
40 / http Connection
   \ &quot;http&quot;
41 / premiumize.me
   \ &quot;premiumizeme&quot;
42 / seafile
   \ &quot;seafile&quot;
Storage&gt; 26
</code></pre>
<p>如要连接谷歌的盘,根据标识选择26(版本不同,序号不一定一样,按实际标识选择)</p>
<pre><code>** See help for onedrive backend at: https://rclone.org/onedrive/ **

OAuth Client Id
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_id&gt;
</code></pre>
<p>不输入,直接回车</p>
<pre><code>OAuth Client Secret
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_secret&gt;
</code></pre>
<p>不输入,直接回车</p>
<pre><code>Choose national cloud region for OneDrive.
Enter a string value. Press Enter for the default (&quot;global&quot;).
Choose a number from below, or type in your own value
 1 / Microsoft Cloud Global
   \ &quot;global&quot;
 2 / Microsoft Cloud for US Government
   \ &quot;us&quot;
 3 / Microsoft Cloud Germany
   \ &quot;de&quot;
 4 / Azure and Office 365 operated by 21Vianet in China
   \ &quot;cn&quot;
region&gt; 1
</code></pre>
<p>选择1</p>
<pre><code>Edit advanced config? (y/n)
y) Yes
n) No (default)
y/n&gt; n
</code></pre>
<p>选择n,不编辑</p>
<pre><code>Remote config
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine
y) Yes (default)
n) No
y/n&gt; y
</code></pre>
<p>选择1自动配置</p>
<pre><code>If your browser doesn't open automatically go to the following link: http://127.0.0.1:53682/auth?state=FDOLLiSz***rSJBbag
Log in and authorize rclone for access
Waiting for code...
Got code
</code></pre>
<p>点击链接,登陆账户,授权给rclone使用,脚本自动获取code</p>
<pre><code>Choose a number from below, or type in an existing value
 1 / OneDrive Personal or Business
   \ &quot;onedrive&quot;
 2 / Root Sharepoint site
   \ &quot;sharepoint&quot;
 3 / Sharepoint site name or URL (e.g. mysite or https://contoso.sharepoint.com/sites/mysite)
   \ &quot;url&quot;
 4 / Search for a Sharepoint site
   \ &quot;search&quot;
 5 / Type in driveID (advanced)
   \ &quot;driveid&quot;
 6 / Type in SiteID (advanced)
   \ &quot;siteid&quot;
 7 / Sharepoint server-relative path (advanced, e.g. /teams/hr)
   \ &quot;path&quot;
Your choice&gt; 1
</code></pre>
<p>选择1</p>
<pre><code>Found 1 drives, please select the one you want to use:
0: OneDrive (business) id=b!jC7ndQM3XkO5C6RFjk8FC0l6JPipknpLuC4BB4ohz64u3aY5OQn_T4Vh-Rr-ZaZD
Chose drive to use:&gt; 0
</code></pre>
<p>选择标识的0网盘</p>
<pre><code>Found drive 'root' of type 'business', URL: https://kogfw***.sharepoint.com/personal/s1oz_****/Documents
Is that okay?
y) Yes (default)
n) No
y/n&gt; y
</code></pre>
<p>选择y</p>
<pre><code>--------------------
[onedrive]
type = onedrive
region = global
token = {&quot;access_token&quot;:&quot;eyJ0eXAiLiIs**gU2l0ZXMuUmVhZC5BbGwgcHJvZmlsZSMastoKDtaM8uxbH-ypRGI0y8H_ysiRw20QRRLc7pdol6BmYo0BcRNXJgJN6xccP5b20-iyLejE_vF1Iw5AKQP4-qirH3NHP-S5l*********pLuC4BB4ohz64u3aY5OQn_T4Vh-Rr-ZaZD
drive_type = business
--------------------
y) Yes this is OK (default)
e) Edit this remote
d) Delete this remote
y/e/d&gt; y
</code></pre>
<p>显示相关config信息,提示你是否确认
输入y</p>
<pre><code>Current remotes:

Name                 Type
====                 ====
onedrive             onedrive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q
</code></pre>
<p>按q退出配置界面
将刚显示的这段config信息粘贴到rclone插件中</p>
<pre><code>--------------------
[onedrive]
type = onedrive
region = global
token = {&quot;access_token&quot;:&quot;eyJ0eXAiLiIs**gU2l0ZXMuUmVhZC5BbGwgcHJvZmlsZSMastoKDtaM8uxbH-ypRGI0y8H_ysiRw20QRRLc7pdol6BmYo0BcRNXJgJN6xccP5b20-iyLejE_vF1Iw5AKQP4-qirH3NHP-S5l*********pLuC4BB4ohz64u3aY5OQn_T4Vh-Rr-ZaZD
drive_type = business
</code></pre>
<p>粘贴至<code>Unraid设置</code>-<code>用户实用程序</code>-<code>rclcone</code></p>
<p><img loading="lazy" src="https://cdn.jsdelivr.ren/gh/Zynismus16/Zynismus16@master/picture/2023/04/17/1681722052.png" alt="1681722052.png"  />
</p>
<p>然后在Unraid终端中输入</p>
<pre><code>rclone config
</code></pre>
<p>即可看到已经连接的网盘信息</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.ren/gh/Zynismus16/Zynismus16@master/picture/2023/04/17/1681722080.png" alt="1681722080.png"  />
</p>
<p>创建用于挂载磁盘的目录
根据自己需求,新建一个用于挂载网盘的空文件夹</p>
<pre><code>mkdir -p /mnt/user/rclone/onedrive
</code></pre>
<p>我想分的细一点,所以等下使用`onedrive空文件夹挂载刚刚连接的谷歌团队盘</p>
<p>挂载网盘到本地
示例</p>
<pre><code>rclone mount onedrive:test /mnt/user/rclone/onedrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 32M --low-level-retries 200 --dir-cache-time 2h --vfs-read-chunk-size 64M --vfs-read-chunk-size-limit 1G &amp;
</code></pre>
<p>需要修改的就是
<code>onedrive:test onedrive</code>为网盘的名字不特指微软网盘<code>test</code>为要挂载的网盘文件夹路径,不填留为挂载整个网盘
<code>/mnt/user/rclone/onedrive</code>本地用于挂载的空目录
关于其他参数含义,可自行查阅最下方命令说明
如需要给emby之类使用,挂载文件夹不显示文件,请修改<code>--umask 000</code>
在emby终端输入 <code>umask</code></p>
<pre><code>/ # umask
0022
/ # 
</code></pre>
<p>将示例中<code>--umask 000</code>修改为<code>--umask 0022</code> emby即可正常访问文件</p>
<p>查询是否成功将网盘挂载到本地</p>
<pre><code>df -h
</code></pre>
<p>输入命令后,如成功挂载,就会有显示挂载的目录了</p>
<p>开机自动挂载
可使用<code>User Scripts插件</code>新建开机任务,输入示例命令</p>
<p>常用命令</p>
<pre><code>fusermount -qzu /mnt/user/rclone/onedrive
</code></pre>
<p>按挂载的目录路径,卸载已挂载的网盘</p>
<pre><code>https://rclone.org/commands/
</code></pre>
<p>官方的命令说明</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>解决索尼相机拍摄素材在win10上无法显示缩略图的问题</title>
      <link>https://zynismus16.github.io/posts/103/</link>
      <pubDate>Thu, 13 Apr 2023 11:09:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/103/</guid>
      <description>目前推测是因为视频色彩空间不同导致的，测试电脑对4:2:0色彩的视频能够生成缩略图但速度较慢，对4:2:2色彩的视频无法生成缩略图。 网上查找</description>
      <content:encoded><![CDATA[<p>目前推测是因为视频色彩空间不同导致的，测试电脑对4:2:0色彩的视频能够生成缩略图但速度较慢，对4:2:2色彩的视频无法生成缩略图。
网上查找后发现安装 <strong>K-Lite Codec Pack</strong> 可解决。
安装完成后成功显示4:2:2色彩的缩略图，4:2:0的缩略图显示速度有明显提升。</p>
<p>软件官网：<a href="http://www.codecguide.com/">Codec Guide: K-Lite Codec Pack - For Windows 11 / 10 / 8.1 / 7</a>
分流下载：</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>网页禁用左右键</title>
      <link>https://zynismus16.github.io/posts/44/</link>
      <pubDate>Tue, 14 Feb 2023 20:50:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/44/</guid>
      <description>先来一种最简单的方法，它直接在body属性定义了oncontextmenu，使得右键的值为false，起到了屏蔽右键的效果。 &amp;lt;body oncontextmenu=self.event.returnValue=false&amp;gt; 复制 这个方式</description>
      <content:encoded><![CDATA[<p>先来一种最简单的方法，它直接在body属性定义了oncontextmenu，使得右键的值为false，起到了屏蔽右键的效果。</p>
<pre tabindex="0"><code>&lt;body oncontextmenu=self.event.returnValue=false&gt;
</code></pre><p>复制</p>
<p>这个方式虽然屏蔽掉了右键的功能，但是左键还可以使用，自然Ctrl+c,Ctrl+v的功能还是可以用的，这时需要屏蔽掉左键，可是要屏蔽左键不是就废掉了，别急，这里只是屏蔽掉左键的选定功能，代码如下：</p>
<pre tabindex="0"><code>&lt;body onselectstart=&#34;return false&#34;&gt;
</code></pre><p>复制</p>
<p>左右键联合起来，就彻底控制了左右键：</p>
<pre tabindex="0"><code>&lt;body oncontextmenu=self.event.returnValue=false onselectstart=&#34;return false&#34;&gt;
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>使用Office Tool Plus部署Ofiice 2021</title>
      <link>https://zynismus16.github.io/posts/27/</link>
      <pubDate>Tue, 17 Jan 2023 06:33:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/27/</guid>
      <description>安装 下载 点击该链接下载 Office Tool Plus，或访问 Office Tool Plus 官网 下载压缩包。 下载完成后解压压缩包得到以下文件 双击打开 Office Tool Plus.exe 部署 点击左边部署 按下图配置 添加</description>
      <content:encoded><![CDATA[<h1 id="安装">安装</h1>
<ol>
<li>下载
点击该链接下载 <a href="https://otp.landian.vip/redirect/download.php?type=runtime&amp;site=yuntu">Office Tool Plus</a>，或访问 Office Tool Plus <a href="https://otp.landian.vip/zh-cn/">官网</a> 下载压缩包。
下载完成后解压压缩包得到以下文件
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/39eSbf7C.png" alt="1676523160095.png"  />

双击打开  <code>Office Tool Plus.exe</code></li>
</ol>
<p><img loading="lazy" src="https://img1.imgtp.com/2023/02/16/DBcnqESe.png" alt="1676523252598.png"  />
</p>
<ol start="2">
<li>部署
点击左边<code>部署</code></li>
</ol>
<p><img loading="lazy" src="https://img1.imgtp.com/2023/02/16/j5ch1xUz.png" alt="1676523297126.png"  />
</p>
<p>按下图配置</p>
<p><img loading="lazy" src="https://img1.imgtp.com/2023/02/16/MfqgJ3eE.png" alt="1676523587851.png"  />
</p>
<ol start="3">
<li>添加产品
产品中点击右方<code>添加产品</code></li>
</ol>
<p><img loading="lazy" src="https://img1.imgtp.com/2023/02/16/p2gsscQC.png" alt="1676523658180.png"  />
</p>
<p>添加 <code>Office 专业增强版 2021</code></p>
<p>下方应用程序可按照需求选择，如只需要Word Excel PPT 就按照下图选择
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/URoUIaSB.png" alt="1676523814775.png"  />
</p>
<ol start="4">
<li>开始部署
选择完成后点击页面最上方 <code>开始部署</code>
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/sVbnhZdY.png" alt="1676523889180.png"  />

等待下载完成并部署完成
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/ldv7KIWL.png" alt="1676523933759.png"  />
</li>
</ol>
<h1 id="激活">激活</h1>
<p>部署完成后点击页面左方<code>激活</code>
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/VOl4ODem.png" alt="1676524022283.png"  />
</p>
<ol>
<li>
<p>许可证安装
选择许可证管理并点击<code>安装许可证</code>
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/mj0U6Omt.png" alt="1676524070671.png"  />

选择 <code>Office LTSC 专业增强版 2021 -批量许可证</code>
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/xclwAGoj.png" alt="1676524919045.png"  />

界面最下方有安装进度，等待所有许可证安装完成。
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/dtoGUszV.png" alt="1676524299520.png"  />
</p>
</li>
<li>
<p>KSM主机设置
安完成后选择上方 <code>KSM管理</code> ，并在 <code>KSM主机</code> 栏填入KSM 主机地址：kms.loli.best
这里提供其他KSM主机列表，可选择其他主机地址： <a href="https://www.coolhub.top/tech-articles/kms_list.html">KMS 列表 | Yerong の小窝 (coolhub.top)</a>
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/fOqcdBNR.png" alt="1676524474868.png"  />

填入KSM主机地址后点击 <code>设置主机</code></p>
</li>
</ol>
<p>最后点击<code>激活</code>并等待程序运行完成即可。
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/SAXJIpNh.png" alt="1676524788754.png"  />
</p>
<p>Tip：
如果输出区提示激活失败，红色字体提示许可证未安装时可尝试卸载许可证后重新安装类似产品的许可证。
<img loading="lazy" src="https://img1.imgtp.com/2023/02/16/oqF7spVE.png" alt="1676524883781.png"  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>3D max入门学习 Part.1</title>
      <link>https://zynismus16.github.io/posts/10/</link>
      <pubDate>Thu, 24 Nov 2022 16:36:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/10/</guid>
      <description>Max界面与菜单栏讲解﻿ 基本工具 选择工具 快捷键:Q c tr l :加选 a l t :减选 有多种选择方式 交叉/窗口 移动工具 快捷键：w 轴向是可以锁定的,移动前</description>
      <content:encoded><![CDATA[<h1 id="max界面与菜单栏讲解">Max界面与菜单栏讲解﻿</h1>
<h2 id="基本工具">基本工具</h2>
<h3 id="选择工具">选择工具</h3>
<p>快捷键:Q</p>
<p>c tr l :加选 a l t :减选 有多种选择方式 交叉/窗口</p>
<h3 id="移动工具">移动工具</h3>
<p>快捷键：w</p>
<p>轴向是可以锁定的,移动前请先确认选择的轴向</p>
<h3 id="旋转工具">旋转工具</h3>
<p>快捷键:E</p>
<p>外圈灰色进行旋转是于屏幕平行轴向进行旋转</p>
<h3 id="缩放工具">缩放工具</h3>
<p>快捷键:R</p>
<p>有三种缩放方式，除特殊情况不要使用第三种﻿</p>
<h2 id="进阶工具">进阶工具</h2>
<h3 id="3d捕捉工具">3D捕捉工具</h3>
<p>用来进行点对点的对齐以及快速单轴向对</p>
<h3 id="角度捕捉工具">角度捕捉工具</h3>
<p>对于旋转角度进行固定数值旋转</p>
<h3 id="材质编辑器">材质编辑器</h3>
<p>节点材质编辑器和层级材质编辑器，给与模型真正的颜色显示</p>
<h3 id="对齐与镜像">对齐与镜像</h3>
<p>对齐工具：补充无法进行点位吸附的一种对齐方式镜像：快速复制并且翻转模型，但是个人基本不用</p>
<h1 id="3dmax软件常用快捷键">3DMAX软件常用快捷键</h1>
<p><code>鼠标中键</code> 平移运动</p>
<p><code>Alt + 鼠标中键</code> 旋转视图</p>
<p><code>Alt + ctrl + 鼠标中键</code> 视图的放大缩小</p>
<p><code>Ctrl + z</code> 恢复上一步</p>
<p><code>Ctrl + y</code> 重复上一步</p>
<p><code>Ctrl + a</code> 全选</p>
<p><code>Ctrl + I</code> 反选</p>
<p><code>G</code> 网格切换</p>
<p><code>F</code> 前视图</p>
<p><code>T</code> 顶视图</p>
<p><code>L</code> 左视图</p>
<p><code>B</code> 底视图</p>
<p><code>Alt + W</code> 最 大化显示视图</p>
<p><code>Ctrl + C</code> 将摄相机适配到视图</p>
<p><code>Alt + Q</code> 将当前选择的物体隔离并最 大化显示在视图上， 其它物体暂时消失显示。</p>
<p><code>C</code> 将所选的视图转换为摄相机视图</p>
<p><code>w</code> 位移</p>
<p><code>e</code> 旋转</p>
<p><code>r</code> 放缩</p>
<p><code>O</code> 显示降级适配(开关)</p>
<p><code>V</code> 打开视图快捷键切换菜单，选择视图进行切换。</p>
<p><code>+ </code>放大坐标轴</p>
<p><code>-</code> 缩小坐标轴</p>
<p><code>Ctrl + Atl + z</code> 在当前视图完全显示所有物体</p>
<p><code>z</code> 在当前视图完全显示所选物体</p>
<p><code>shift + 鼠标左键</code> 复制所选择的一个或多个物体</p>
<p><code>Ctrl + 鼠标左键</code> 增加选择</p>
<p><code>Alt + 鼠标左键</code> 减少选择</p>
<p><code>H</code> 菜单选择物体</p>
<p><code>M</code> 显示材质编辑器</p>
<p><code>N</code> 打开动画记录按钮</p>
<p><code>/?</code> 播放动画</p>
<p><code>F3</code> 实体显示和线框显示的切换</p>
<p><code>F4</code> 线框显示</p>
<p><code>F9</code> 快速渲染</p>
<p><code>F10</code> 显示渲染菜单
<code>[ ] </code>分别放大或缩小一倍视图显示</p>
<p><code>M</code> 材质</p>
<p><code>z</code> 选择物最大</p>
<p><code>ctrl + AlT + z</code> 满屏</p>
<p><code>ctrl + x</code> 视图模式</p>
<p><code>ALT + W</code> 最 大化</p>
<p><code>Shift + Q =</code> 渲染</p>
<p><code>F9 </code>视图切换</p>
<p><code>F3 </code>显示降级适配(开关)</p>
<p><code>O</code> 适应透视图格点</p>
<p><code>Shift + Ctrl + A</code> 排列</p>
<p><code>Alt + A</code> 角度捕捉(开关)</p>
<p><code>A</code> 动画模式 (开关)</p>
<p><code>N</code> 改变到后视图</p>
<p><code>K</code> 背景锁定(开关)</p>
<p><code>Alt + Ctrl + B</code> 前一时间单位</p>
<p><code>.</code> 下一时间单位</p>
<p><code>,</code> 改变到上(Top)视图</p>
<p><code>T</code> 改变到底(Bottom)视图</p>
<p><code>B</code> 改变到相机(Camera)视图</p>
<p><code>C</code> 改变到前(Front)视图</p>
<p><code>F</code> 改变到等大的用户(User)视图</p>
<p><code>U</code> 改变到右(Right)视图</p>
<p><code>R</code> 改变到透视(Perspective)图</p>
<p><code>P</code> 循环改变选择方式</p>
<p><code>Ctrl + F</code> 默认灯光(开关)</p>
<p><code>Ctrl + L</code> 删除物体</p>
<p><code>DEL</code> 当前视图暂时失效</p>
<p><code>D</code> 是否显示几何体内框(开关)</p>
<p><code>Ctrl + E</code> 显示第 一个工具条</p>
<p><code>Alt + 1</code> 专家模式全屏(开关)</p>
<p><code>Ctrl + X</code> 暂存(Hold)场景</p>
<p><code>Alt + Ctrl + H</code> 取回(Fetch)场景</p>
<p><code>Alt + Ctrl + F</code> 冻结所选物体</p>
<p><code>6</code> 跳到最 后一帧</p>
<p><code>END</code> 跳到第 一帧</p>
<p><code>HOME</code> 显示/隐藏相机(Cameras)</p>
<p><code>Shift + C</code> 显示/隐藏几何体(Geometry)</p>
<p><code>Shift + O</code> 显示/隐藏网格(Grids)</p>
<p><code>G</code> 显示/隐藏帮助(Helpers)物体</p>
<p><code>Shift + H</code> 显示/隐藏光源(Lights)</p>
<p><code>Shift + L</code> 显示/隐藏粒子系统(Particle Systems)</p>
<p><code>Shift + P</code> 显示/隐藏空间扭曲(Space Warps)物体</p>
<p><code>Shift + W</code> 锁定用户界面(开关)</p>
<p><code>Alt + 0</code> 匹配到相机(Camera)视图</p>
<p><code>Ctrl + C</code> 材质(Material)编辑器</p>
<p><code>M</code> 最 大化</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用ADBlock插件屏蔽知乎登录弹窗</title>
      <link>https://zynismus16.github.io/posts/11/</link>
      <pubDate>Tue, 08 Nov 2022 07:25:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/11/</guid>
      <description>在ADBlock插件设置中找到添加自定义屏蔽规则，添加下面代码即可屏蔽。 static.zhihu.com/heifetz/main.signflow.*.js static.zhihu.com/heifetz/*.signflow.*.css</description>
      <content:encoded><![CDATA[<p>在ADBlock插件设置中找到添加自定义屏蔽规则，添加下面代码即可屏蔽。</p>
<pre tabindex="0"><code>static.zhihu.com/heifetz/main.signflow.*.js
static.zhihu.com/heifetz/*.signflow.*.css
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>Typecho数据库常用的API，创建/更新/读取/删除</title>
      <link>https://zynismus16.github.io/posts/12/</link>
      <pubDate>Wed, 02 Nov 2022 08:47:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/12/</guid>
      <description>Typecho数据库常用API，整理了Typecho数据库常用的API，实现基本的CURD操作。创建（Create）、更新（Update）、</description>
      <content:encoded><![CDATA[<p>Typecho数据库常用API，整理了Typecho数据库常用的API，实现基本的CURD操作。创建（Create）、更新（Update）、读取（Retrieve）和删除（Delete）</p>
<h2 id="表创建和删除">表创建和删除</h2>
<p>在Typecho插件开发过程中，往往需要创建自己的表。<code>Typecho_Db</code>类中的<code>query</code>函数，可用于执行所有sql语句，因此我们使用<code>query()</code>来进行表的创建、修改或者删除。</p>
<pre tabindex="0"><code>$db= Typecho_Db::get();
$prefix = $db-&gt;getPrefix();
$db-&gt;query(&#39;create table &#39;.$prefix.&#39;metas xxxxx&#39;);
</code></pre><p>注意，使用<code>query</code>方式创建表的时候，需要在表明前手动添加<code>$prefix</code>前缀，否则在后面的使用过程中会造成困惑。</p>
<p>还可以使用<code>table.</code>来代替<code>$prefix</code>，typecho会自动识别并替换成指定的前缀。</p>
<p>同理，修改或者删除Typecho数据库中表，按照同样的方式调用<code>query</code>即可。</p>
<h2 id="数据查询">数据查询</h2>
<h3 id="select查询表数据">select，查询表数据</h3>
<p><code>select</code>语句是可以说Typecho插件开发中最常用的sql调用。</p>
<pre tabindex="0"><code>$db = Typecho_Db::get();
$query= $db-&gt;select()-&gt;from(&#39;table.metas&#39;);
$result = $db-&gt;fetchAll($query);
</code></pre><h3 id="说明">说明：</h3>
<p>typecho中，<code>.</code>号具有特定的意义，这里<code>table.metas</code>表示这是一个metas表。实际上，typecho是自动将<code>table.</code>的字符使用<code>str_replace</code>替换成了<code>config.inc.php</code>中设定的前缀。</p>
<h3 id="举例">举例：</h3>
<p><code>$db-&gt;select()-&gt;from('table.metas');</code>将生成<code>SELECT * FROM typecho_metas WHERE (mid= '2' )，</code>其中<code>typecho_</code>是表前缀;
而<code>$db-&gt;select()-&gt;from('metas');</code>将生成<code>SELECT * FROM metas WHERE (mid= '2' )，</code>注意这里没有了表前缀。
指定表字段查询</p>
<p>有时为了提高查询性能，需要指定查询表中特定的几个字段，那么可以使用下面的方式：</p>
<pre tabindex="0"><code>$query= $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;);
echo $query; //SELECT `mid` , `name` FROM typecho_metas
</code></pre><p>如果联合查询中，两个表存在相同的字段名，那么可以使用table.来指定表名：</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;table.contents.cid&#39;)-&gt;from(&#39;table.contents&#39;)-&gt;join....
</code></pre><h3 id="指定查询条件">指定查询条件</h3>
<p>指定SQL查询的<code>where</code>语句，是最常用的api调用。</p>
<pre tabindex="0"><code>$query= $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid = ?&#39;, 2);
echo $query; //SELECT * FROM typecho_metas WHERE (`mid` = &#39;2&#39; )
</code></pre><p>如需要指定多个查询条件，直接多次调用<code>where</code>即可，将生成<code>and</code>关系的<code>where</code>条件</p>
<pre tabindex="0"><code>$db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid = ?&#39;, 2)-&gt;where(&#39;name like ? &#39;, $name);
</code></pre><p>使用<code>OR</code>关系的查询条件</p>
<p>可以使用<code>orWhere()</code>函数来指定SQL查询的或条件。</p>
<pre tabindex="0"><code>$db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid = ?&#39;, 2)-&gt;orWhere(&#39;mid = ? &#39;, 3);
//SELECT `mid` , `name` FROM typecho_metas WHERE (`mid` = &#39;2&#39; ) OR (`mid` = &#39;3&#39; )
</code></pre><p>指定查询范围</p>
<p>在需要分页的场景下，分页是必需的操作。offset()和limit()分别用于指定起始位置和结束位置，即指定查询范围。</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;offset(2)-&gt;limit(3);
echo $query;//SELECT `mid` , `name` FROM typecho_metas LIMIT 3 OFFSET 2
</code></pre><p>Typecho中，还提供了一种简写的方法，见<code>page()</code>函数。</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;page(3,10);
echo $query;//SELECT `mid` , `name` FROM typecho_metas LIMIT 10 OFFSET 20
//表示取第三页，并取10条记录。
</code></pre><h3 id="对查询结果进行排序">对查询结果进行排序</h3>
<p>在Typecho中，使用<code>order()</code>函数和<code>Typecho_Db::SORT_DESC</code>指定查询结果的排序方式。</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;order(&#39;mid&#39;,Typecho_Db::SORT_DESC);
echo $query;//SELECT `mid` , `name` FROM typecho_metas ORDER BY `mid` DESC
</code></pre><p>Tips: <code>Typecho_Db::SORT_ASC </code>表示升序排序，<code>Typecho_Db::SORT_DESC</code>表示降序排序</p>
<h3 id="联合查询">联合查询</h3>
<p>联合查询是SQL的常用语法，在Typecho中，同样使用内置函数<code>join()</code>方便地进行联合查询。</p>
<pre tabindex="0"><code>$query = $db-&gt;select()
    -&gt;from(&#39;table.contents&#39;)
    -&gt;join(&#39;table.comments&#39;, &#39;table.contents.cid = table.comments.cid&#39;,Typecho_Db::LEFT_JOIN)
    -&gt;where(&#39;table.contents.type = ?&#39;, &#39;post&#39;);
echo $query;
//SELECT * FROM typechocontents LEFT JOIN typecho_comments ON typecho_contents.`cid` = typecho_comments.`cid` WHERE (typecho_contents.`type` = &#39;post&#39; )
</code></pre><p><code>update</code>，更新表数据
Typecho中，使用<code>update()</code>函数来进行更新表操作。但注意，update操作，需要借助于query执行。</p>
<pre tabindex="0"><code>$update = $db-&gt;update(&#39;table.metas&#39;)-&gt;rows(array(&#39;name&#39;=&gt;&#39;case_in_cn&#39;))-&gt;where(&#39;mid=?&#39;,6);
echo $update;//UPDATE typecho_metas SET `name` = &#39;some_name&#39; WHERE (`mid`=&#39;6&#39; )
//执行后，返回收影响的行数。
$updateRows= $db-&gt;query($update);
</code></pre><p><code>insert</code>，插入数据
Typecho中，使用<code>insert()</code>函数来进行表插入操作。同样，<code>insert</code>操作需要借助于<code>query</code>函数。</p>
<pre tabindex="0"><code>$insert = $db-&gt;insert(&#39;table.metas&#39;)
    -&gt;rows(array(&#39;mid&#39; =&gt; &#39;22&#39;, &#39;name&#39; =&gt; &#39;hello world&#39;));
//将构建好的sql执行, 如果你的主键id是自增型的还会返回insert id
$insertId = $db-&gt;query($insert);
</code></pre><p><code>delete</code>，删除数据
Typecho中使用<code>delete()</code>函数来删除数据表中的行。delete操作用于删除数据表中指定的行，同样需要借助<code>query</code>函数执行。</p>
<pre tabindex="0"><code>$delete = $db-&gt;delete(&#39;table.metas&#39;)
    -&gt;where(&#39;mid = ?&#39;, 2);
//将构建好的sql执行, 会自动返回已经删除的记录数
$deletedRows = $db-&gt;query($delete);
</code></pre><p>数据库调试</p>
<h2 id="查看查询语句">查看查询语句</h2>
<p>在Typecho调试过程中，打印sql语句往往是很有帮助的。对于大于5.2版本的php，直接<code>echo $query</code>即可，对于小于5.2版本，则需要显式调用<code>__toString()</code>函数</p>
<pre tabindex="0"><code>$select = $db-&gt;select()-&gt;from(&#39;table.metas&#39;);
//如果版本大于php5.2
echo $select;
//如果小于php5.2
echo $select-&gt;__toString();
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>Typecho主题前台实现删除文章功能</title>
      <link>https://zynismus16.github.io/posts/13/</link>
      <pubDate>Wed, 12 Oct 2022 10:49:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/13/</guid>
      <description>将下面的代码放到 post.php 中即可 &amp;lt;?php Typecho_Widget::widget(&amp;#39;Widget_Security&amp;#39;)-&amp;gt;to($security); ?&amp;gt; &amp;lt;a href=&amp;#34;&amp;lt;?php $security-&amp;gt;index(&amp;#39;/action/contents-post-edit?do=delete&amp;amp;cid=&amp;#39;.$this-&amp;gt;cid); ?&amp;gt;&amp;#34;&amp;gt;删除文章&amp;lt;/a&amp;gt; 点击按钮立即删除文章！ 上面的代码虽然实现了功能，</description>
      <content:encoded><![CDATA[<p>将下面的代码放到 <code>post.php</code> 中即可</p>
<pre tabindex="0"><code>&lt;?php Typecho_Widget::widget(&#39;Widget_Security&#39;)-&gt;to($security); ?&gt;
&lt;a href=&#34;&lt;?php $security-&gt;index(&#39;/action/contents-post-edit?do=delete&amp;cid=&#39;.$this-&gt;cid); ?&gt;&#34;&gt;删除文章&lt;/a&gt;
</code></pre><p>点击按钮立即删除文章！</p>
<p>上面的代码虽然实现了功能，但却泯灭了人性！下面我们完善下人性部分,代码改为</p>
<pre tabindex="0"><code>&lt;?php Typecho_Widget::widget(&#39;Widget_Security&#39;)-&gt;to($security); ?&gt;
&lt;a href=&#34;&lt;?php $security-&gt;index(&#39;/action/contents-post-edit?do=delete&amp;cid=&#39;.$this-&gt;cid); ?&gt;&#34; onclick=&#34;javascript:return p_del()&#34;&gt;删除文章&lt;/a&gt;
&lt;script&gt;
function p_del() {
    var msg = &#34;您真的确定要删除吗？&#34;;
    if (confirm(msg)==true){
        return true;
    }else{
        return false;
    }
}
&lt;/script&gt;
</code></pre><p>这样弄好，点击按钮会弹出确认框，问其是否删除文章，用户确认后才会删除，比较符合操作习惯！</p>
<p><code>post.php </code>页面成功删除文章后，因为文章不存在了，所以页面自动跳到了 404 页面</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>author.php打造用户中心社区的参数调用和使用方法</title>
      <link>https://zynismus16.github.io/posts/14/</link>
      <pubDate>Wed, 14 Sep 2022 10:49:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/14/</guid>
      <description>typecho的author.php文件 是用户页面，但是官网给予的参考文档很少，很多人也是直接忽略掉了这个页面 我也是通过打印$this 获取了</description>
      <content:encoded><![CDATA[<p>typecho的<code>author.php</code>文件</p>
<p>是用户页面，但是官网给予的参考文档很少，很多人也是直接忽略掉了这个页面</p>
<p>我也是通过打印<code>$this</code></p>
<p>获取了我们大概能调用，有用的东西</p>
<p>例如：获取当前用户的信息</p>
<pre tabindex="0"><code>$userInfo = (object)$this-&gt;pageRow;
print_r($userInfo-&gt;screenName);
</code></pre><p>具体可调用参数，可打印print_r($userInfo)来查看</p>
<p>输出该作者的文章，这里跟列表页面一样的</p>
<p>至于为什么？</p>
<p><code>archive.php</code> 通用（分类、搜索、标签、作者）页面文件</p>
<p>可以看结构，这四个页面能调用的东西都大致相同</p>
<pre tabindex="0"><code>&lt;?php if ($this-&gt;have()): ?&gt;
  &lt;?php while($this-&gt;next()): ?&gt;
  内容
  &lt;?php endwhile; ?&gt;
&lt;?php else: ?&gt;
    &lt;article class=&#34;article-post&#34;&gt;
        &lt;div class=&#34;content-null&#34;&gt;
            &lt;p&gt;空空如也~&lt;/p&gt;
        &lt;/div&gt;
    &lt;/article&gt;
&lt;?php endif; ?&gt;
</code></pre><p>输出这个人的评论</p>
<p>需要在 <code>functions.php</code> 添加代码</p>
<pre tabindex="0"><code>/*输出作者发表的评论*/
class Widget_Post_AuthorComment extends Widget_Abstract_Comments
{
    var $getAuthorUid;

    public function execute()
    {
        global $AuthorCommentId;//全局作者id
        $select  = $this-&gt;select()-&gt;limit($this-&gt;parameter-&gt;pageSize)
        -&gt;where(&#39;table.comments.status = ?&#39;, &#39;approved&#39;)
        -&gt;where(&#39;table.comments.authorId = ?&#39;,$this-&gt;parameter-&gt;authorId)//获取作者id
        -&gt;where(&#39;table.comments.type = ?&#39;, &#39;comment&#39;)
        -&gt;order(&#39;table.comments.coid&#39;, Typecho_Db::SORT_DESC);//根据coid排序
        $this-&gt;db-&gt;fetchAll($select, array($this, &#39;push&#39;));
    }
}
</code></pre><p>然后再 <code>author.php</code> 可以调用</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;widget(&#39;Widget_Post_AuthorComment@author&#39;,&#39;pageSize=8&amp;authorId=用户id&#39;)-&gt;to($AuthorComment); ?&gt;
&lt;?php if ($AuthorComment-&gt;have()): ?&gt;
    &lt;?php while($AuthorComment-&gt;next()): ?&gt;

    //循环处
    //可调用参数
    //$AuthorComment-&gt;permalink(); 该评论所属文章链接
    //$AuthorComment-&gt;title();该评论所属文章标题
    //$AuthorComment-&gt;content();该评论内容
    //$AuthorComment-&gt;dateWord();该评论时间

    &lt;?php endwhile; ?&gt;
    &lt;?php else: ?&gt;
    &lt;div class=&#34;text-center&#34;&gt;&lt;div class=&#34;icon-svg svg-empty&#34;&gt;&lt;/div&gt;&lt;div class=&#34;text-muted&#34;&gt;看起来这里没有任何东西。&lt;/div&gt;&lt;/div&gt;
    &lt;?php endif; ?&gt;
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>Typecho常用函数</title>
      <link>https://zynismus16.github.io/posts/16/</link>
      <pubDate>Wed, 11 May 2022 10:53:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/16/</guid>
      <description>Typecho常用函数： 1、网站名称 &amp;lt;?php $this-&amp;gt;options-&amp;gt;title() ?&amp;gt; 2、网站网址 &amp;lt;?php $this-&amp;gt;options -&amp;gt;siteUrl(); ?&amp;gt; 3、站点说明 &amp;lt;?php $this-&amp;gt;options-&amp;gt;description() ?&amp;gt; 4、文章完整路径和标题 &amp;lt;?php $this-&amp;gt;archiveTitle(&amp;#39; &amp;amp;raquo; &amp;#39;, &amp;lt; span class=&amp;#34;string&amp;#34;&amp;gt;&amp;#39;&amp;#39;, &amp;#39; | &amp;#39;); ?&amp;gt;&amp;lt;?php $this -&amp;gt;options-&amp;gt;title(); ?&amp;gt; 5、模板地</description>
      <content:encoded><![CDATA[<p>Typecho常用函数：</p>
<p>1、网站名称</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;options-&gt;title() ?&gt;
</code></pre><p>2、网站网址</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;options -&gt;siteUrl(); ?&gt;
</code></pre><p>3、站点说明</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;options-&gt;description() ?&gt;
</code></pre><p>4、文章完整路径和标题</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;archiveTitle(&#39; &amp;raquo; &#39;, &lt; span class=&#34;string&#34;&gt;&#39;&#39;, &#39; | &#39;); ?&gt;&lt;?php $this -&gt;options-&gt;title(); ?&gt;
</code></pre><p>5、模板地址</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;options-&gt;themeUrl(); ?&gt;
</code></pre><p>6、导入模板文件夹内的php文件</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;need(&#39;.php&#39;); ?&gt;
</code></pre><p>7、输出文章或单页面的作者</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;author(); ?&gt;
</code></pre><p>8、输出作者gravatar头像</p>
<pre tabindex="0"><code>//此处是输出完整的 img 标签，40 是头像的宽高

&lt; ?php $this-&gt;author-&gt;gravatar(&#39;40&#39;) ?&gt;
</code></pre><p>9、作者文章列表链接</p>
<pre tabindex="0"><code>//Typecho支持多用户博客时，按作者获取该作者文章连接

&lt;?php $this-&gt;author-&gt;permalink (); ?&gt;
</code></pre><p>10、作者个人主页链接</p>
<pre tabindex="0"><code>//Typecho 支持多用户博客，此处输出作者个人主页地址

&lt;?php $this-&gt;author-&gt;url(); ?&gt;
</code></pre><p>11 、作者的邮箱地址</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;author-&gt;mail(); ?&gt;
</code></pre><p>12、上一篇与下一篇调用代码</p>
<pre tabindex="0"><code>// 上一篇

&lt;?php $this-&gt;thePrev(); ?&gt;

// 下一篇

&lt;?php $this-&gt;theNext(); ?&gt;
</code></pre><p>13、typecho中is语法是否为首页并输出相关内容</p>
<pre tabindex="0"><code>&lt;?php if ($this-&gt;is(&#39;index&#39;)): ?&gt;

// 首页输出内容

&lt;?php elseif ($this-&gt;is(&#39;category&#39;)): ?&gt;

// 按照分类输出内容

&lt;?php else: ?&gt;

// 不是首页、分类输出内容

&lt;?php endif; ?&gt;
</code></pre><p>14、获取文章或页面评论数</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;commentsNum(&#39;No Comments&#39;, &#39;1 Comment&#39; , &#39;%d Comments&#39;); ?&gt;
</code></pre><p>15、截取文章指定字数（可用于首页显示文章摘要）</p>
<pre tabindex="0"><code>// 截取350字并以&#34;...&#34;结尾

&lt;?php $this-&gt;excerpt(350, &#39;...&#39;); ?&gt;
</code></pre><p>16、调用自定义字段</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;fields-&gt;fieldName ?&gt;
</code></pre><p>17、获取 RSS 地址</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;options-&gt;feedUrl(); ?&gt;
</code></pre><p>18、获取最新文章</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;widget(&#39;Widget_Contents_Post_Recent&#39;, &#39;pageSize=8&amp;type=category&#39;)-&gt;parse(&#39;&lt;li&gt;&lt;a href=&#34;{permalink}&#34;&gt;{title}&lt;/a&gt;&lt;/li&gt;&#39;); ?&gt;
</code></pre><p>19、获取分类名称，不带链接</p>
<pre tabindex="0"><code>// 不带连接的获取分类

&lt;?php $this-&gt;category(&#39;,&#39;, false); ?&gt;

// 获取所有分类

&lt;?php $this-&gt;widget(&#39;Widget_Metas_Category_List&#39;)-&gt;listCategories(&#39;wrapClass=widget-list&#39;); ?&gt;

// 自定义分类

&lt;?php $category = NULL; $this-&gt;widget(&#39;Widget_Metas_Category_List&#39;)-&gt;to($category); ?&gt;

&lt;?php while ($category-&gt;next()): ?&gt;

&lt;a class=&#34;list-group-item list-group-item-action&#34; title=&#34;&lt;?php $category-&gt;description(); ?&gt;&#34; href=&#34;&lt;?php $category-&gt;permalink(); ?&gt;&#34;&gt;&lt;?php $category-&gt;name(); ?&gt;&lt;/a&gt;

&lt;?php endwhile; ?&gt;
</code></pre><p>20、获取文章分类列表</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;widget(&#39;Widget_Metas_Category_List&#39;)-&gt;parse(&#39;&lt;li&gt;&lt;a href=&#34;{permalink}&#34;&gt;{name}&lt;/a&gt; ({count})&lt;/li&gt;&#39;); ?&gt;
</code></pre><p>21、获取某分类下的POST文章</p>
<pre tabindex="0"><code>// 注意参数 mid=1

&lt;?php $this-&gt;widget(&#39;Widget_Archive@index&#39;, &#39;pageSize=8&amp;type=category&#39;, &#39;mid=1&#39;)

-&gt;parse(&#39;&lt;li&gt;&lt;a href=&#34;{permalink}&#34; title=&#34;{title}&#34;&gt;{title}&lt;/a&gt;&lt;/li&gt;&#39;); ?&gt;
</code></pre><p>22、获取最新评论列表</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;widget(&#39;Widget_Comments_Recent&#39;)-&gt;to($comments); ?&gt;

&lt;?php while($comments-&gt;next()): ?&gt;

    &lt;li&gt;
        &lt;a href=&#34;&lt;?php $comments-&gt;permalink(); ?&gt;&#34;&gt;

           &lt;?php $comments-&gt;author(false); ?&gt;

        &lt;/a&gt;: &lt;?php $comments-&gt;excerpt(50, &#39;...&#39;); ?&gt;

    &lt;/li&gt;

&lt;?php endwhile; ?&gt;
</code></pre><p>23、首页获取限制条数的最新文章(可用于置顶操作类)</p>
<pre tabindex="0"><code>&lt;?php while ($this-&gt;next()): ?&gt;

&lt;?php if ($this-&gt;sequence &lt;= 3): ?&gt;

    //这里编写html逻辑

&lt;?php endif; ?&gt;

&lt;?php endwhile; ?&gt;
</code></pre><p>24、获取访客最新评论，只显示访客评论不显示博主自己发的评论</p>
<pre tabindex="0"><code>&lt;?php $this-&gt;widget(&#39;Widget_Comments_Recent&#39;,&#39;ignoreAuthor=true&#39;)-&gt;to($comments); ?&gt;

    &lt;?php while($comments-&gt;next()): ?&gt;

    &lt;li&gt;&lt;a href=&#34;&lt;?php $comments-&gt;permalink(); ?&gt;&#34;&gt;&lt;?php $comments-&gt;author(false); ?&gt;&lt;/a&gt;: &lt;?php $comments-&gt;excerpt(50, &#39;...&#39;); ?&gt;&lt;/li&gt;

&lt;?php endwhile; ?&gt;
</code></pre><p>25、文章按时间归档</p>
<pre tabindex="0"><code>&lt;?php
     $this-&gt;widget(&#39;Widget_Contents_Post_Date&#39;, &#39;type=month&amp;format=F Y&#39;)-&gt;parse(&#39;&lt;li&gt;&lt;a href=&#34;{permalink}&#34;&gt;{date}&lt;/a&gt;&lt;/li&gt;&#39;);
?&gt;
</code></pre><p>26、获取标签云</p>
<pre tabindex="0"><code>// 输出标签云

&lt;?php $this-&gt;widget(&#39;Widget_Metas_Tag_Cloud&#39;, &#39;sort=mid&amp;ignoreZeroCount=1&amp;desc=0&amp;limit=30&#39;)-&gt;to($tags); ?&gt;

&lt;?php if($tags-&gt;have()): ?&gt;

&lt;ul class=&#34;tags-list&#34;&gt;

&lt;?php while ($tags-&gt;next()): ?&gt;

    &lt;li&gt;&lt;a href=&#34;&lt;?php $tags-&gt;permalink(); ?&gt;&#34; rel=&#34;tag&#34; class=&#34;size-&lt;?php $tags-&gt;split(5, 10, 20, 30); ?&gt;&#34; title=&#34;&lt;?php $tags-&gt;count(); ?&gt; 个话题&#34;&gt;&lt;?php $tags-&gt;name(); ?&gt;&lt;/a&gt;&lt;/li&gt;

&lt;?php endwhile; ?&gt;

&lt;?php else: ?&gt;

    &lt;li&gt;&lt;?php _e(&#39;没有任何标签&#39;); ?&gt;&lt;/li&gt;

&lt;?php endif; ?&gt;

&lt;/ul&gt;

// 输出随机颜色标签云

&lt;?php $this-&gt;widget(&#39;Widget_Metas_Tag_Cloud&#39;, &#39;ignoreZeroCount=1&amp;limit=30&#39;)-&gt;to($tags); ?&gt;

&lt;ul class=&#34;tags-list&#34;&gt;

&lt;?php while($tags-&gt;next()): ?&gt;

    &lt;li&gt;&lt;a style=&#34;color: rgb(&lt;?php echo(rand(0, 255)); ?&gt;, &lt;?php echo(rand(0,255)); ?&gt;, &lt;?php echo(rand(0, 255)); ?&gt;)&#34; href=&#34;&lt;?php $tags-&gt;permalink(); ?&gt;&#34; title=&#39;&lt;?php $tags-&gt;name(); ?&gt;&#39;&gt;&lt;?php $tags-&gt;name(); ?&gt;&lt;/a&gt;&lt;/li&gt;

&lt;?php endwhile; ?&gt;

&lt;/ul&gt;
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>PC浏览器获取京东Cookie教程</title>
      <link>https://zynismus16.github.io/posts/17/</link>
      <pubDate>Sun, 13 Mar 2022 07:53:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/17/</guid>
      <description>打开电脑浏览器新建一个无痕页面访问网址 https://m.jd.com/ 按键盘F12键打开开发者工具，然后点下图中的图标，切换到触屏版界面浏览！ 此时是未登录状态(建议使用手</description>
      <content:encoded><![CDATA[<ol>
<li>打开电脑浏览器新建一个无痕页面访问网址 <a href="/https://m.jd.com/">https://m.jd.com/</a></li>
</ol>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.4cuttlly8e80.jpg" alt="image"  />

<img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.3vazgekqkg80.jpg" alt="image"  />
</p>
<ol>
<li>按键盘F12键打开开发者工具，然后点下图中的图标，切换到触屏版界面浏览！</li>
</ol>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.ncemte7lzts.jpg" alt="image"  />
</p>
<ol>
<li>此时是未登录状态(建议使用手机短信验证码登录)，如已登录请忽略此步骤</li>
</ol>
<p>使用手机短信验证码登录(此方式cookie有效时长大概31天，其他登录方式比较短)</p>
<p>点击网页右下角未登录按钮登录手机号。</p>
<p>右边的开发者窗口选择箭头标识的Network或者网络窗口，没有的点击箭头指向的→符号选择。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.o08ga1p4j1c.jpg" alt="image"  />
</p>
<ol>
<li>此时如果需要输入手势验证码请多试几次，由于鼠标操作没有触摸方便，容易识别失败。</li>
</ol>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.3u8vnl4begs0.jpg" alt="image"  />
</p>
<p>登录成功</p>
<ol>
<li>获取cookie</li>
</ol>
<p>现在看向开发者工具栏，下面会有很多链接，这时可以先点击红框1清除</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.3vw940vlk480.jpg" alt="image"  />
</p>
<p>然后点击左侧网页中的右下角 我的</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.39oj0vz3urs0.jpg" alt="image"  />
</p>
<p>这时右侧应该会多出来几个链接，如上图</p>
<p>选择红框中有 log那个链接</p>
<p>在弹出来的窗口下翻，一直翻到箭头所指的内容 cookie开头的</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220209/image.2iup0s28qxy0.jpg" alt="image"  />
</p>
<p>复制整个段落即可</p>
<p>ps：可直接将该段粘贴到 <a href="http://nas.cxynas.top:5701/#/login">http://nas.cxynas.top:5701/#/login</a></p>
<p>然后点击登录即可畅享京东挂机自动签到做活动</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>markdown语法测试</title>
      <link>https://zynismus16.github.io/posts/50/</link>
      <pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/50/</guid>
      <description>对markdown解析器进行语法测试</description>
      <content:encoded><![CDATA[<p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.</p>
<h2 id="headings">Headings</h2>
<p>The following HTML <code>&lt;h1&gt;</code>—<code>&lt;h6&gt;</code> elements represent six levels of section headings. <code>&lt;h1&gt;</code> is the highest section level while <code>&lt;h6&gt;</code> is the lowest.</p>
<h1 id="h1">H1</h1>
<h2 id="h2">H2</h2>
<h3 id="h3">H3</h3>
<h4 id="h4">H4</h4>
<h5 id="h5">H5</h5>
<h6 id="h6">H6</h6>
<h2 id="paragraph">Paragraph</h2>
<p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.</p>
<p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.</p>
<h2 id="blockquotes">Blockquotes</h2>
<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>
<h4 id="blockquote-without-attribution">Blockquote without attribution</h4>
<blockquote>
<p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.
<strong>Note</strong> that you can use <em>Markdown syntax</em> within a blockquote.</p>
</blockquote>
<h4 id="blockquote-with-attribution">Blockquote with attribution</h4>
<blockquote>
<p>Don&rsquo;t communicate by sharing memory, share memory by communicating.</p>
<p>— <cite>Rob Pike<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></cite></p>
</blockquote>
<h2 id="tables">Tables</h2>
<p>Tables aren&rsquo;t part of the core Markdown spec, but Hugo supports them out-of-the-box.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Age</th>
</tr>
</thead>
<tbody>
<tr>
<td>Bob</td>
<td>27</td>
</tr>
<tr>
<td>Alice</td>
<td>23</td>
</tr>
</tbody>
</table>
<h4 id="inline-markdown-within-tables">Inline Markdown within tables</h4>
<table>
<thead>
<tr>
<th>Italics</th>
<th>Bold</th>
<th>Code</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>italics</em></td>
<td><strong>bold</strong></td>
<td><code>code</code></td>
</tr>
</tbody>
</table>
<h2 id="code-blocks">Code Blocks</h2>
<h4 id="inline-code">Inline Code</h4>
<p><code>This is Inline Code</code></p>
<h4 id="only-pre">Only <code>pre</code></h4>
<pre>
This is pre text
</pre>
<h4 id="code-block-with-backticks">Code block with backticks</h4>
<pre tabindex="0"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
    &lt;head&gt;
        &lt;meta charset=&#34;utf-8&#34; /&gt;
        &lt;title&gt;Example HTML5 Document&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt;Test&lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><h4 id="code-block-with-backticks-and-language-specified">Code block with backticks and language specified</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Example HTML5 Document<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;description&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Test<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="code-block-indented-with-four-spaces">Code block indented with four spaces</h4>
<pre><code>&lt;!doctype html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;title&gt;Example HTML5 Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;Test&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h4 id="code-block-with-hugos-internal-highlight-shortcode">Code block with Hugo&rsquo;s internal highlight shortcode</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!doctype html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Example HTML5 Document<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Test<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></span></span></code></pre></div>
<h4 id="gist">Gist</h4>
<script type="application/javascript" src="https://gist.github.com/spf13/7896402.js"></script>

<h2 id="list-types">List Types</h2>
<h4 id="ordered-list">Ordered List</h4>
<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
</ol>
<h4 id="unordered-list">Unordered List</h4>
<ul>
<li>List item</li>
<li>Another item</li>
<li>And another item</li>
</ul>
<h4 id="nested-list">Nested list</h4>
<ul>
<li>Fruit
<ul>
<li>Apple</li>
<li>Orange</li>
<li>Banana</li>
</ul>
</li>
<li>Dairy
<ul>
<li>Milk</li>
<li>Cheese</li>
</ul>
</li>
</ul>
<h2 id="other-elements--abbr-sub-sup-kbd-mark">Other Elements — abbr, sub, sup, kbd, mark</h2>
<p><abbr title="Graphics Interchange Format">GIF</abbr> is a bitmap image format.</p>
<p>H<sub>2</sub>O</p>
<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>
<p>Press <kbd><kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>Delete</kbd></kbd> to end the session.</p>
<p>Most <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>The above quote is excerpted from Rob Pike&rsquo;s <a href="https://www.youtube.com/watch?v=PAAkCSZUG1c">talk</a> during Gopherfest, November 18, 2015.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded>
    </item>
    
    <item>
      <title>HTML占位符</title>
      <link>https://zynismus16.github.io/posts/19/</link>
      <pubDate>Wed, 16 Feb 2022 12:56:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/19/</guid>
      <description>&amp;amp;#32; 普通的英文半角空格 &amp;amp;#160; &amp;amp;nbsp; &amp;amp;#xA0; no-break space 普通的英文半角空格但不换行 &amp;amp;#12288; 中文全角空格 （一个中文宽度） &amp;amp;#8194; &amp;amp;ensp; en空格 半个中文宽度 &amp;amp;#8195; &amp;amp;emsp; em空格 一个中文宽度 &amp;amp;#8197; 四分</description>
      <content:encoded><![CDATA[<pre tabindex="0"><code>&amp;#32;
</code></pre><p>普通的英文半角空格</p>
<pre tabindex="0"><code>&amp;#160; &amp;nbsp; &amp;#xA0; no-break space
</code></pre><p>普通的英文半角空格但不换行</p>
<pre tabindex="0"><code>&amp;#12288;
</code></pre><p>中文全角空格 （一个中文宽度）</p>
<pre tabindex="0"><code>&amp;#8194; &amp;ensp;
</code></pre><p>en空格 半个中文宽度</p>
<pre tabindex="0"><code>&amp;#8195; &amp;emsp;
</code></pre><p>em空格 一个中文宽度</p>
<pre tabindex="0"><code>&amp;#8197;
</code></pre><p>四分之一em空格 （四分之一中文宽度）</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>v2rayNG使用教程</title>
      <link>https://zynismus16.github.io/posts/6/</link>
      <pubDate>Tue, 01 Feb 2022 21:33:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/6/</guid>
      <description>购买订阅 购买ssr订阅或V2ray订阅。 推荐使用Wallless机场 或者一元机场。 Wallless优惠码： 9折优惠码： wallless2023 8折优惠码限年付： hey2023</description>
      <content:encoded><![CDATA[<ol>
<li>
<p>购买订阅
购买ssr订阅或V2ray订阅。
推荐使用<a href="https://portal.wallless.xyz/#/register?code=gk0NQhHG">Wallless机场</a> 或者<a href="https://xn--4gq62f52gdss.com/#/register?code=TxCwNHQJ">一元机场</a>。
Wallless优惠码：</p>
<table>
<thead>
<tr>
<th style="text-align:center"><a href="https://portal.wallless.xyz/#/register?code=gk0NQhHG">9折优惠码： wallless2023</a></th>
<th style="text-align:center"><a href="https://portal.wallless.xyz/#/register?code=gk0NQhHG">8折优惠码限年付： hey2023</a></th>
</tr>
</thead>
</table>
</li>
<li>
<p>下载安装 V2rayNG</p>
<table>
<thead>
<tr>
<th style="text-align:center"><a href="https://ghproxy.com/https://github.com/2dust/v2rayNG/releases/download/1.7.37/v2rayNG_1.7.37.apk">加速下载</a></th>
<th style="text-align:center"><a href="https://github.com/2dust/v2rayNG/releases/download/1.7.37/v2rayNG_1.7.37.apk">官方下载</a></th>
<th style="text-align:center"><a href="https://play.google.com/store/apps/details?id=com.v2ray.ang&amp;hl=zh&amp;gl=US">Google商店</a></th>
</tr>
</thead>
</table>
</li>
<li>
<p>设置订阅</p>
</li>
</ol>
<ul>
<li>复制订阅地址</li>
<li>添加 V2ray 订阅
打开 V2rayNG， 点击左上角三道杠 【☰】 → 点击 订【阅分组设置】 → 点击右上角 【➕】。填写一个名称，把 v2ray 订阅添加进去，点右上角保存图标 【✔】-&gt;退出订阅分组设置。
<img loading="lazy" src="https://doc.miyun.app/images/subimg/vng/v2rayNG-sub1.webp" alt="添加订阅"  />
</li>
<li>修改 V2rayNG 代理模式
<img loading="lazy" src="https://doc.miyun.app/images/subimg/vng/v2rayNG-sub2.webp" alt="修改代理模式"  />
</li>
<li>更新 V2rayNG 订阅
<img loading="lazy" src="https://doc.miyun.app/images/subimg/vng/v2rayNG-sub3.webp" alt="更新订阅"  />
</li>
</ul>
<blockquote>
<p>在后期使用过程中，遇到多个节点不可用，请更新下订阅 更新时记得先关闭 vpn。如果更新订阅失败，尝试断开 vpn 连接后再更新。</p>
</blockquote>
<ul>
<li>开启 V2rayNG 代理
上一步更新订阅成功后，在刷新出来的节点服务器中选择一个，点击右下角图标开启代理，首次开启弹出连接请求点击确定。
<img loading="lazy" src="https://doc.miyun.app/images/subimg/vng/v2rayNG-sub4.webp" alt="开启代理"  />
</li>
</ul>
<blockquote>
<p>启动后即可访问 youtube，google 等服务测试网络连通性。如果感觉网速不佳，尝试切换不同节点，或者升级订阅套餐。</p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>PicX 一款以Github为存储的图床程序</title>
      <link>https://zynismus16.github.io/posts/20/</link>
      <pubDate>Tue, 11 Jan 2022 06:56:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/20/</guid>
      <description>官方描述 灵魂拷问，你为图床问题烦恼过吗? 用 Hexo、VuePress、Hugo 等静态博客写文章，不知图片保存到哪里去&amp;hellip; 特意花钱</description>
      <content:encoded><![CDATA[<h2 id="官方描述">官方描述</h2>
<blockquote>
<p>灵魂拷问，你为图床问题烦恼过吗?</p>
<p>用 Hexo、VuePress、Hugo 等静态博客写文章，不知图片保存到哪里去&hellip;
特意花钱租云服务器托管图片，太贵划不来，而且上传配置好繁琐&hellip; 网上复制的心仪图片的链接，用着用着某一天就失效了&hellip;
使用其他的付费图床，速度慢，容量小，还限时、限流量&hellip; 想找一款真正免费、稳定、不限容量、访问速度还很快的图床&hellip; &hellip;&hellip;
那么，快来试试 PicX 图床 吧，专为技术博主打造，谁用谁知道~</p>
<p>只需选择一个 GitHub 仓库作为图床，然后在 PicX 官网 完成 Token 绑定和相应配置就能使用了。</p>
<p>PicX 图床 浏览器在线使用，免下载&amp;安装，如此简单。</p>
</blockquote>
<h2 id="功能特性">功能特性</h2>
<p>支持 拖拽、复制粘贴、选择文件 等方式进行选择图片
支持图片 重命名、哈希化（确保图片名唯一）和 设置命名前缀
支持 批量上传图片、批量删除图片 和 批量复制图片外链
支持 多级目录 管理 （创建多级目录 / 查看多级目录图片）
支持 一键复制 图片外链和 一键转换 Markdown 格式
支持 图床管理（对仓库图片的 增删改查）
支持 图片压缩 (内置三款压缩算法，可在上传前自动压缩，效果极佳)
支持 暗夜模式 (自由切换 / 自动切换)
支持 PWA
i18n
设置图片水印
支持其他 Git 厂商 （例如：Gitee / Coding）</p>
<p>该图床可以自己搭建或者直接使用官方搭建好的，只需要使用自己的Github账户创建一个仓库，并创建一个能够访问仓库的Token。
及其简单，适合小白使用</p>
<p>官方文档：<a href="https://picx-docs.xpoet.cn/tutorial/get-start.html">https://picx-docs.xpoet.cn/tutorial/get-start.html</a>
官方提供的图床：<a href="https://picx.xpoet.cn/">https://picx.xpoet.cn</a></p>
<h2 id="预览">预览</h2>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220111/001.tq4fd0wzm4w.jpg" alt="001"  />

<img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220111/002.62l28xvezng0.jpg" alt="002"  />

<img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220111/004.237drmh6amps.jpg" alt="004"  />

<img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220111/003.10doowq2ooe8.jpg" alt="003"  />

<img loading="lazy" src="https://cdn.jsdelivr.net/gh/Zynismus16/Picture@master/20220111/001.3i1505xxvn20.jpg" alt="001"  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>FolderMagic：一键文件列表目录程序 支持webdav,字幕</title>
      <link>https://zynismus16.github.io/posts/23/</link>
      <pubDate>Wed, 15 Dec 2021 12:00:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/23/</guid>
      <description>FolderMagic 简单易用，无需部署的列表程序。 特性： 无需环境，无需数据库，低内存占用 支持webdav管理 支持视频在线播放，支持字幕（srt, ass, ssa, vtt等）</description>
      <content:encoded><![CDATA[<p>FolderMagic
简单易用，无需部署的列表程序。 特性：</p>
<ul>
<li>无需环境，无需数据库，低内存占用</li>
<li>支持webdav管理</li>
<li>支持视频在线播放，支持字幕（srt, ass, ssa, vtt等）</li>
<li>支持图片预览，支持常见jpg, gif, png, tif, psd格式预览</li>
<li>支持音频在线播放，支持解析专辑图片和歌手信息</li>
<li>支持文档在线预览，包括常见各类代码格式，如html, js, css, php, py, pdf等</li>
<li>支持office在线预览</li>
<li>支持共享链接，支持共享链接管理</li>
<li>集成aria2ng，并安全的指向内部转发地址</li>
<li>文件搜索，即时搜索整个列表文件夹</li>
<li>中英多语言支持</li>
<li>支持常用文件管理，文件一拖即传</li>
<li>支持主流浏览器，完整支持IE11，部分支持IE10和IE9</li>
<li>响应式布局，适配移动浏览器，适配黑暗模式</li>
</ul>
<p>这不是一个Onedrive/GoogleDrive/Dropbox/世纪互联/OSS 的列表程序，这是硬盘目录列表程序</p>
<h2 id="使用方式">使用方式</h2>
<p>本程序为linux amd64可执行文件
下载
<a href="https://github.com/FolderMagic/FolderMagic/raw/master/FolderMagic">https://github.com/FolderMagic/FolderMagic/raw/master/FolderMagic</a></p>
<p>chmod +x FolderMagic 给权限
./FolderMagic (其他自定义参数，参考github说明)
（可选）用宝塔/apache/nginx/caddy等反代
默认共享当前所在文件夹，公开访问无认证。所有可选参数如下：</p>
<h1 id="命令行参数">命令行参数</h1>
<pre tabindex="0"><code>  -aria string
        Aria2 RPC地址 (默认 &#34;http://127.0.0.1:6800/jsonrpc&#34;)，列表程序将安全的转发这个地址
  -auth string
        认证: &#34;用户名:密码&#34; 认证信息用于网页登录和webdav，不设置则无认证，webdav将被禁用
  -bind string
        监听端口 (默认 &#34;:80&#34;)
  -gzip
        使用gzip压缩 (默认 true)
  -page404 string
        自定义404页面
  -root string
        列表根目录 (默认为当前目录)
  -share int
        默认共享链接有效期，单位分钟 (默认 60)
  -wd string
        用于webdav的认证路径, 不可使用根目录 (默认 &#34;/manager&#34;)
</code></pre><h2 id="缩略图">缩略图</h2>
<p><img loading="lazy" src="https://s4.ax1x.com/2021/12/23/T8TOyT.png" alt="T8TOyT.png"  />
</p>
<p><img loading="lazy" src="https://s4.ax1x.com/2021/12/23/T8TqS0.png" alt="T8TqS0.png"  />
</p>
<p><img loading="lazy" src="https://s4.ax1x.com/2021/12/23/T8TLlV.png" alt="T8TLlV.png"  />
</p>
<p><img loading="lazy" src="https://s4.ax1x.com/2021/12/23/T8THWq.png" alt="T8THWq.png"  />
</p>
<h2 id="webdav-使用">webdav 使用</h2>
<p>使用命令行 -auth user:password 启用鉴权后webdav即自动启用。</p>
<p>使用raidrive或其他webdav兼容客户端连接 <a href="http://your.domain:port/manager">http://your.domain:port/manager</a> 输入用户名和密码即可连接。</p>
<p>/manager 可使用 -wd 指令更改</p>
<h2 id="文件管理">文件管理</h2>
<p>在网页列表界面右键即可操作文件和文件夹，可以新建和删除。</p>
<p>不使用认证时只能下载文件，不能进行其他操作</p>
<h2 id="文件上传">文件上传</h2>
<p>使用webdav客户端上传。
直接把文件拖到列表界面，出现蓝框提示松手上传即可。
上传过程中可继续拖入新的文件排队上传。不支持拖文件夹上传。</p>
<p>IE9 及以下浏览器由于浏览器限制无法上传。</p>
<h2 id="视频预览">视频预览</h2>
<p>支持预览mp4, mkv格式，能否成功播放取决于实际视频容器内的编码格式。</p>
<p>字幕需要在视频同一文件夹下，字幕文件名包含视频名称即可，如a.mp4和a_en.srt即为匹配字幕。多个字幕将被同时载入可以在播放界面选择。字幕支持所有常见字幕，ass特效字幕保留文字部分，特效无法支持。</p>
<h2 id="音频预览">音频预览</h2>
<p>支持mp3和ogg，具体支持视浏览器而定。点击即可在左下角开始播放。</p>
<p>音频将被自动解析专辑图片和歌曲名称，歌手。（IE9不支持解析）</p>
<p>点击新的音频可以自动加入播放列表，切换文件夹不影响播放。 （IE9 将中断播放）</p>
<h2 id="图片预览">图片预览</h2>
<p>支持各种常见图片预览，图片将自动生成合适缩略图并使用webp格式（如果浏览器支持）传输</p>
<p>支持psd格式预览，gif格式生成缩略图后没有动画。</p>
<h2 id="office预览">Office预览</h2>
<p>基于微软在线预览实现。按照微软的预览要求，需要将拥有域名并且FolderMagic需要在80或443端口，否则无法预览。</p>
<p>即：浏览器中显示的地址必须为 <a href="http://example.com/example.doc">http://example.com/example.doc</a> 或者 <a href="https://example.com/example.ppt">https://example.com/example.ppt</a> 这样的形式才能被预览，否则会显示无法打开文件。</p>
<h2 id="共享管理">共享管理</h2>
<p>通过右键复制的临时链接自动拥有一定时间的有效期（默认60分钟，可通过-share指令更改），到期后无法被下载。</p>
<p>在右下角菜单中选择共享管理即可添加或减少共享时间，也可删除共享</p>
<p>复制的永久链接除非移动文件或更改用户名密码，否则永远有效，不可删除。</p>
<p>重启FolderMagic后，所有临时共享都会失效，永久连接依然有效</p>
<h2 id="ariang">AriaNG</h2>
<p>通过右下角菜单可以调用内置的ariaNg，并默认指向/jsonrpc路径。FolderMagic将默认转发/jsonrpc到<a href="http://127.0.0.1:6800/jsonrpc">http://127.0.0.1:6800/jsonrpc</a> （aria2 rpc默认路径），可通过-aria 指令更改转发地址</p>
<p>/jsonrpc 需要被认证后才能访问（如果启用了认证的话），所以该转发是安全的，即便没有密码，其他人也无法连接到你的aria2rpc</p>
<h2 id="文件搜索">文件搜索</h2>
<p>启动后FolderMagic即开始检索被列表的文件夹并监听文件夹的所有改动。</p>
<p>可以在右下角菜单处打开搜索，也可使用Ctrl+F或者F3立刻开始搜索。</p>
<p>索引文件占用少量内存（约3M/10k文件）。监听文件夹基于inotify，如果存在海量文件夹（如十几万个）则将会占用较多内存，甚至可能用完inotify的所有监听额度，请不要直接共享根目录。</p>
<h2 id="安全措施">安全措施</h2>
<p>启用鉴权后，FolderMagic将只允许授权用户登录，每个IP有5次密码试错机会，失败后将被禁用15分钟，期间FolderMagic任何服务都无法访问。</p>
<p>推荐使用root用户，FolderMagic将使用chroot保护运行环境，完全避免由于潜在的bug而被黑到系统其他核心文件夹的机会。</p>
<p>如不使用root，请开放对应用户的chroot权限。无权限时chroot将被禁用，安全性将被降低。</p>
<p>由于chroot的使用，符号链接文件和符号链接文件夹可能无法使用，因为他们将指向一个完全不同的路径</p>
<h2 id="https">https</h2>
<p>FolderMagic 没有https的原生支持，你可以通过nginx或者caddy做前端来添加https的支持。</p>
<p>假设你的FolderMagic绑定于127.0.0.1:81，以下例子仅供参考：</p>
<p>nginx</p>
<pre tabindex="0"><code>server {
        listen              443 ssl;
        server_name         域名或ip;

        add_header Strict-Transport-Security &#34;max-age=31536000; includeSubDomains; preload&#34; always;

        #证书文件
        ssl_certificate     www.example.com.crt;
        #私钥文件
        ssl_certificate_key www.example.com.key;

        #优先采取服务器算法
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers &#34;EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4&#34;;

        location / {
            proxy_buffering off;
            # 一定要加，否则FolderMagic在反代后不能识别客户ip，直接封锁全部用户
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:81;
        }
}
</code></pre><p>已知问题
初次访问的语言将被记录，此后访问将使用第一次访问的语言。可使用?lng=zh_CN或?lng=en强制切换到中文或英文
IE10及以下符号显示不正常，IE9及以下不能上传文件，切换文件夹将丢失当前正在预览的图像或音视频
360浏览器 由于奇葩的设计，极速模式下所有文件拖放上传功能都不可用，只能在兼容模式下的IE内核才能上传
和部分拖放打开的插件有冲突，会出现有时能拖放有时不能，或者拖放时页面闪烁等情况，只能对本列表页面禁用插件解决。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Typecho对数据库的增删查改</title>
      <link>https://zynismus16.github.io/posts/24/</link>
      <pubDate>Mon, 02 Aug 2021 09:02:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/24/</guid>
      <description>Typecho数据库提供了非常易用的api，和原生SQL写法没有太大的差别，同时也很好地处理了SQL常见的安全问题，如sql注入。本文从实用</description>
      <content:encoded><![CDATA[<p>Typecho数据库提供了非常易用的api，和原生SQL写法没有太大的差别，同时也很好地处理了SQL常见的安全问题，如sql注入。本文从实用角度出发，介绍了typecho操作数据库的常用场景以及相关api用法。</p>
<h1 id="表创建和删除">表创建和删除</h1>
<p>在Typecho插件开发过程中，往往需要创建自己的表。上文提到Typecho_Db类中的query函数，可用于执行所有sql语句，因此我们使用query()来进行表的创建、修改或者删除。</p>
<pre tabindex="0"><code>$db= Typecho_Db::get();
$prefix = $db-&gt;getPrefix();
$db-&gt;query(&#39;create table &#39;.$prefix.&#39;metas xxxxx&#39;);
</code></pre><p><em>注意，使用query方式创建表的时候，需要在表明前手动添加$prefix前缀，否则在后面的使用过程中会造成困惑。
还可以使用table.来代替$prefix，typecho会自动识别并替换成指定的前缀。</em></p>
<p>同理，修改或者删除Typecho数据库中表，按照同样的方式调用query即可。</p>
<h1 id="数据查询">数据查询</h1>
<ol>
<li>select，查询表数据</li>
</ol>
<p>select语句是可以说Typecho插件开发中最常用的sql调用。</p>
<pre tabindex="0"><code>$db = Typecho_Db::get();
$query= $db-&gt;select()-&gt;from(&#39;table.metas&#39;);
$result = $db-&gt;fetchAll($query);
</code></pre><p>*说明：
typecho中，.号具有特定的意义，这里table.metas表示这是一个metas表。实际上，typecho是自动将table.的字符使用str_replace替换成了config.inc.php中设定的前缀。</p>
<p>举例：</p>
<p>$db-&gt;select()-&gt;from(&rsquo;table.metas&rsquo;);将生成SELECT * FROM typecho_metas WHERE (mid = &lsquo;2&rsquo; )，其中typecho_是表前缀；</p>
<p>而$db-&gt;select()-&gt;from(&lsquo;metas&rsquo;);将生成SELECT <em>FROM metas WHERE (mid = &lsquo;2&rsquo; )，注意这里没有了表前缀。</em></p>
<p>指定表字段查询
有时为了提高查询性能，需要指定查询表中特定的几个字段，那么可以使用下面的方式：</p>
<pre tabindex="0"><code>$query= $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;);
echo $query; //SELECT `mid` , `name` FROM typecho_metas
</code></pre><p>如果联合查询中，两个表存在相同的字段名，那么可以使用table.来指定表名：</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;table.contents.cid&#39;)-&gt;from(&#39;table.contents&#39;)-&gt;join....
</code></pre><p>指定查询条件</p>
<p>指定SQL查询的where语句，是最常用的api调用。</p>
<pre tabindex="0"><code>$query= $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid = ?&#39;, 2);
echo $query; //SELECT * FROM typecho_metas WHERE (`mid` = &#39;2&#39; )
</code></pre><p>如需要指定多个查询条件，直接多次调用where即可，将生成and关系的where条件</p>
<pre tabindex="0"><code>$db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid = ?&#39;, 2)-&gt;where(&#39;name like ? &#39;, $name);
</code></pre><p>使用OR关系的查询条件</p>
<p>可以使用orWhere()函数来指定SQL查询的或条件。</p>
<pre tabindex="0"><code>$db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid = ?&#39;, 2)-&gt;orWhere(&#39;mid = ? &#39;, 3);
//SELECT `mid` , `name` FROM typecho_metas WHERE (`mid` = &#39;2&#39; ) OR (`mid` = &#39;3&#39; )
</code></pre><p>指定查询范围</p>
<p>在需要分页的场景下，分页是必需的操作。offset()和limit()分别用于指定起始位置和结束位置，即指定查询范围。</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;offset(2)-&gt;limit(3);
echo $query;//SELECT `mid` , `name` FROM typecho_metas LIMIT 3 OFFSET 2
</code></pre><p>Typecho中，还提供了一种简写的方法，见page()函数。</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;page(3,10);
echo $query;//SELECT `mid` , `name` FROM typecho_metas LIMIT 10 OFFSET 20
//表示取第三页，并取10条记录。
</code></pre><p>对查询结果进行排序</p>
<p>在Typecho中，使用order()函数和Typecho_Db::SORT_DESC指定查询结果的排序方式。</p>
<pre tabindex="0"><code>$query = $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;order(&#39;mid&#39;,Typecho_Db::SORT_DESC);
echo $query;//SELECT `mid` , `name` FROM typecho_metas ORDER BY `mid` DESC
</code></pre><p>Typecho_Db::SORT_ASC 表示升序排序，Typecho_Db::SORT_DESC表示降序排序</p>
<p>联合查询</p>
<p>联合查询是SQL的常用语法，在Typecho中，同样使用内置函数join()方便地进行联合查询。</p>
<pre tabindex="0"><code>$query = $db-&gt;select()
    -&gt;from(&#39;table.contents&#39;)
    -&gt;join(&#39;table.comments&#39;, &#39;table.contents.cid = table.comments.cid&#39;,Typecho_Db::LEFT_JOIN)
    -&gt;where(&#39;table.contents.type = ?&#39;, &#39;post&#39;);
echo $query;
//SELECT * FROM typechocontents LEFT JOIN typecho_comments ON typecho_contents.`cid` = typecho_comments.`cid` WHERE (typecho_contents.`type` = &#39;post&#39; )
</code></pre><h1 id="update更新表数据">update，更新表数据</h1>
<p>Typecho中，使用update()函数来进行更新表操作。但注意，update操作，需要借助于query执行。</p>
<pre tabindex="0"><code>$update = $db-&gt;update(&#39;table.metas&#39;)-&gt;rows(array(&#39;name&#39;=&gt;&#39;case_in_cn&#39;))-&gt;where(&#39;mid=?&#39;,6);
echo $update;//UPDATE typecho_metas SET `name` = &#39;some_name&#39; WHERE (`mid`=&#39;6&#39; )
//执行后，返回收影响的行数。
$updateRows= $db-&gt;query($update);
</code></pre><h1 id="insert插入数据">insert，插入数据</h1>
<p>Typecho中，使用insert()函数来进行表插入操作。同样，insert操作需要借助于query函数。</p>
<pre tabindex="0"><code>$insert = $db-&gt;insert(&#39;table.metas&#39;)
    -&gt;rows(array(&#39;mid&#39; =&gt; &#39;22&#39;, &#39;name&#39; =&gt; &#39;hello world&#39;));
//将构建好的sql执行, 如果你的主键id是自增型的还会返回insert id
$insertId = $db-&gt;query($insert);
</code></pre><h1 id="delete删除数据">delete，删除数据</h1>
<p>Typecho中使用delete()函数来删除数据表中的行。delete操作用于删除数据表中指定的行，同样需要借助query函数执行。</p>
<pre tabindex="0"><code>$delete = $db-&gt;delete(&#39;table.metas&#39;)
    -&gt;where(&#39;mid = ?&#39;, 2);
//将构建好的sql执行, 会自动返回已经删除的记录数
$deletedRows = $db-&gt;query($delete);
</code></pre><h1 id="数据库调试">数据库调试</h1>
<p>在Typecho调试过程中，打印sql语句往往是很有帮助的。对于大于5.2版本的php，直接echo $query即可，对于小于5.2版本，则需要显式调用__toString()函数</p>
<pre tabindex="0"><code>$select = $db-&gt;select()-&gt;from(&#39;table.metas&#39;);
//如果版本大于php5.2
echo $select;
//如果小于php5.2
echo $select-&gt;__toString();
</code></pre>]]></content:encoded>
    </item>
    
    <item>
      <title>Typecho部分系统文件用途</title>
      <link>https://zynismus16.github.io/posts/25/</link>
      <pubDate>Tue, 13 Jul 2021 08:03:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/25/</guid>
      <description>typecho后台的文件简单的功能对照说明，因为是本人自行的琢磨，没有看任何文档，所以肯定会有不足，不足之处请回复说明。发这个的原因是我觉得</description>
      <content:encoded><![CDATA[<p>typecho后台的文件简单的功能对照说明，因为是本人自行的琢磨，没有看任何文档，所以肯定会有不足，不足之处请回复说明。发这个的原因是我觉得这样详细列出来，方便各位基友修改/重构typecho的后台模板。</p>
<table>
<thead>
<tr>
<th>文件名</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>welcome.php</td>
<td>博客首次安装成功的欢迎界面</td>
</tr>
<tr>
<td>common.php</td>
<td>检测是否为第一次登陆，检测程序是否可有升级</td>
</tr>
<tr>
<td>common-js.php</td>
<td>消息处理及后台菜单展开的js</td>
</tr>
<tr>
<td>upgrade.php</td>
<td>程序升级引导</td>
</tr>
<tr>
<td>login.php</td>
<td>登陆界面</td>
</tr>
<tr>
<td>register.php</td>
<td>用户注册页面</td>
</tr>
<tr>
<td>header.php</td>
<td>头部加载css和js等</td>
</tr>
<tr>
<td>copyright.php</td>
<td>版权声明</td>
</tr>
<tr>
<td>form-js.php</td>
<td>form对应的js</td>
</tr>
<tr>
<td>table-js.php</td>
<td>table对应的js</td>
</tr>
<tr>
<td>footer.php</td>
<td>页脚</td>
</tr>
<tr>
<td>menu.php</td>
<td>菜单导航条</td>
</tr>
<tr>
<td>extending.php</td>
<td>插件拓展后台菜单的接口</td>
</tr>
<tr>
<td>page-title.php</td>
<td>页面标题</td>
</tr>
<tr>
<td>index.php</td>
<td>进入后台的首页，对应菜单为网站概要</td>
</tr>
<tr>
<td>profile.php</td>
<td>个人设置</td>
</tr>
<tr>
<td>plugins.php</td>
<td>插件管理</td>
</tr>
<tr>
<td>options-plugin.php</td>
<td>插件设置页面</td>
</tr>
<tr>
<td>themes.php</td>
<td>网站外观</td>
</tr>
<tr>
<td>theme-editor.php</td>
<td>编辑模板的页面</td>
</tr>
<tr>
<td>options-theme.php</td>
<td>设置模板的页面即模板后台</td>
</tr>
<tr>
<td>write-post.php</td>
<td>文章撰写页面</td>
</tr>
<tr>
<td>write-js.php</td>
<td>撰写文章/页面时的发布时间，标签，分类，保存草稿，高价设置</td>
</tr>
<tr>
<td>file-upload.php</td>
<td>文章/页面附件上传，及管理界面</td>
</tr>
<tr>
<td>file-upload-js.php</td>
<td>文章/页面附件上传，及管理功能</td>
</tr>
<tr>
<td>custom-fields.php</td>
<td>自定义字段界面</td>
</tr>
<tr>
<td>custom-fields-js.php</td>
<td>自定义字段功能实现</td>
</tr>
<tr>
<td>editor-js.php</td>
<td>编辑器</td>
</tr>
<tr>
<td>write-page.php</td>
<td>创建页面</td>
</tr>
<tr>
<td>manage-posts.php</td>
<td>管理文章界面</td>
</tr>
<tr>
<td>manage-pages.php</td>
<td>管理页面界面</td>
</tr>
<tr>
<td>manage-comments.php</td>
<td>管理评论界面</td>
</tr>
<tr>
<td>manage-categories.php</td>
<td>管理分类界面</td>
</tr>
<tr>
<td>category.php</td>
<td>某个分类的编辑页面</td>
</tr>
<tr>
<td>manage-tags.php</td>
<td>管理标签界面</td>
</tr>
<tr>
<td>manage-medias.php</td>
<td>所有文章的附件管理页面</td>
</tr>
<tr>
<td>media.php</td>
<td>某个附件的管理</td>
</tr>
<tr>
<td>manage-users.php</td>
<td>所有用户管理页面</td>
</tr>
<tr>
<td>user.php</td>
<td>编辑某个用户</td>
</tr>
<tr>
<td>options-general.php</td>
<td>网站基本设置页面</td>
</tr>
<tr>
<td>options-discussion.php</td>
<td>评论设置页面</td>
</tr>
<tr>
<td>options-reading.php</td>
<td>阅读设置页面</td>
</tr>
<tr>
<td>options-permalink.php</td>
<td>永久链接设置页面</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    
    <item>
      <title>“约定”</title>
      <link>https://zynismus16.github.io/posts/26/</link>
      <pubDate>Thu, 08 Jul 2021 08:04:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/posts/26/</guid>
      <description>一直想做个个人站 希望能记录自己生活的点点滴滴，能记录自己学习成长过程，能记录自己这个&amp;quot;健忘症&amp;quot;患者忘掉的东西。 于是它来了</description>
      <content:encoded><![CDATA[<p>一直想做个个人站
希望能记录自己生活的点点滴滴，能记录自己学习成长过程，能记录自己这个&quot;健忘症&quot;患者忘掉的东西。
于是它来了
不希望它将来能做多大，能有多少人访问。只求能记录，能回忆。过了多久后自己翻看到之前写的内容时能够会心一笑或者尬的抠juo。
不管怎样它都应该被我坚持运行下去！！！</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>友链</title>
      <link>https://zynismus16.github.io/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/links/</guid>
      <description>Hello World 一个记录技术、阅读、生活的博客 &gt; 以上排名不分先后 友链格式 名称： Hello World 网址： https://zynismus16.github.io 图标： https://zynismus16.github.io/favicon.png 描述： 一个记录技术、阅读、生活的博客 友链申请要求 秉承互</description>
      <content:encoded><![CDATA[<div class="friend">
<a target="_blank" href=https://zynismus16.github.io title=Hello&#32;World class="friendurl">
  <div class="frienddiv">
    <div class="frienddivleft">
      <img class="myfriend" src=https://zynismus16.github.io/favicon.png />
    </div>
    <div class="frienddivright">
      <div class="friendname">Hello World</div>
      <div class="friendinfo">一个记录技术、阅读、生活的博客</div>
    </div>
  </div>
</a>
</div>
> 以上排名不分先后
<br/>
<br/>
<br/>
<br/>
<br/>
<div style="font-size: 20px;" class="youlian">友链格式</div>
<div style="font-size: 16px;">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>名称：</td>
<td>Hello World</td>
</tr>
<tr>
<td>网址：</td>
<td><a href="https://zynismus16.github.io">https://zynismus16.github.io</a></td>
</tr>
<tr>
<td>图标：</td>
<td><a href="https://zynismus16.github.io/favicon.png">https://zynismus16.github.io/favicon.png</a></td>
</tr>
<tr>
<td>描述：</td>
<td>一个记录技术、阅读、生活的博客</td>
</tr>
</tbody>
</table>
</div>
<br/>
<div style="font-size: 20px;">友链申请要求</div>
<blockquote>
<p>秉承互换友链原则、文章定期更新<!-- 、网站在工信部备案 -->、不能有太多广告、个人描述字数控制在15字内</p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>图册</title>
      <link>https://zynismus16.github.io/atlas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/atlas/</guid>
      <description>“鬼”楼 一枝梅花出墙来 三峡大坝的柳树 宜昌兰草谷 小麦田 微观世界 成都人民广场大楼 成都博物馆梅花鹿 成都锦里 成都锦里0 成都锦里1 成都锦里古玩市场 成都</description>
      <content:encoded><![CDATA[

<style>
    .gallery-photos{width:100%;}
    .gallery-photo{width:24.9%;position: relative;visibility: hidden;overflow: hidden;}
    .gallery-photo.visible{visibility: visible;animation: fadeIn 2s;}
    .gallery-photo img{display: block;width:100%;border-radius:0;padding:4px;animation: fadeIn 1s;cursor: pointer;transition: all .4s ease-in-out;}
    .gallery-photo span.photo-title,.gallery-photo span.photo-time{background: rgba(0, 0, 0, 0.3);padding:0px 8px;font-size:0.9rem;color: #fff;display:none;animation: fadeIn 1s;}
    .gallery-photo span.photo-title{position:absolute;bottom:4px;left:4px;}
    .gallery-photo span.photo-time{position:absolute;top:4px;left:4px;font-size:0.8rem;}
    .gallery-photo:hover span.photo-title{display:block;}
    .gallery-photo:hover img{transform: scale(1.1);}
    @media screen and (max-width: 1280px) {
        .gallery-photo{width:33.3%;}
    }
    @media screen and (max-width: 860px) {
        .gallery-photo{width:49.9%;}
    }
    @media (max-width: 683px){
        .photo-time{display: none;}
    }
    @keyframes fadeIn{
        0% {opacity: 0;}
       100% {opacity: 1;}
    }
</style>

<div class="gallery-photos">
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e2%80%9c%e9%ac%bc%e2%80%9d%e6%a5%bc.jpg" alt="“鬼”楼.jpg" />
      <span class="photo-title">“鬼”楼</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e4%b8%80%e6%9e%9d%e6%a2%85%e8%8a%b1%e5%87%ba%e5%a2%99%e6%9d%a5.jpg" alt="一枝梅花出墙来.jpg" />
      <span class="photo-title">一枝梅花出墙来</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e4%b8%89%e5%b3%a1%e5%a4%a7%e5%9d%9d%e7%9a%84%e6%9f%b3%e6%a0%91.jpg" alt="三峡大坝的柳树.jpg" />
      <span class="photo-title">三峡大坝的柳树</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e5%ae%9c%e6%98%8c%e5%85%b0%e8%8d%89%e8%b0%b7.jpg" alt="宜昌兰草谷.jpg" />
      <span class="photo-title">宜昌兰草谷</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e5%b0%8f%e9%ba%a6%e7%94%b0.jpg" alt="小麦田.jpg" />
      <span class="photo-title">小麦田</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e5%be%ae%e8%a7%82%e4%b8%96%e7%95%8c.jpg" alt="微观世界.jpg" />
      <span class="photo-title">微观世界</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%88%90%e9%83%bd%e4%ba%ba%e6%b0%91%e5%b9%bf%e5%9c%ba%e5%a4%a7%e6%a5%bc.jpg" alt="成都人民广场大楼.jpg" />
      <span class="photo-title">成都人民广场大楼</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%88%90%e9%83%bd%e5%8d%9a%e7%89%a9%e9%a6%86%e6%a2%85%e8%8a%b1%e9%b9%bf.jpg" alt="成都博物馆梅花鹿.jpg" />
      <span class="photo-title">成都博物馆梅花鹿</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%88%90%e9%83%bd%e9%94%a6%e9%87%8c.jpg" alt="成都锦里.jpg" />
      <span class="photo-title">成都锦里</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%88%90%e9%83%bd%e9%94%a6%e9%87%8c0.jpg" alt="成都锦里0.jpg" />
      <span class="photo-title">成都锦里0</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%88%90%e9%83%bd%e9%94%a6%e9%87%8c1.jpg" alt="成都锦里1.jpg" />
      <span class="photo-title">成都锦里1</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%88%90%e9%83%bd%e9%94%a6%e9%87%8c%e5%8f%a4%e7%8e%a9%e5%b8%82%e5%9c%ba.jpg" alt="成都锦里古玩市场.jpg" />
      <span class="photo-title">成都锦里古玩市场</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%88%90%e9%83%bd%e9%ab%98%e6%9e%b6.jpg" alt="成都高架.jpg" />
      <span class="photo-title">成都高架</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%96%b0%e8%87%aa%e8%a1%8c%e8%bd%a6.jpg" alt="新自行车.jpg" />
      <span class="photo-title">新自行车</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%a2%85%e8%8a%b1.jpg" alt="梅花.jpg" />
      <span class="photo-title">梅花</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%b2%99%e6%b2%b3%e5%85%ac%e5%9b%ad.jpg" alt="沙河公园.jpg" />
      <span class="photo-title">沙河公园</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%b5%b7%e6%a3%a0%e8%8a%b1.jpg" alt="海棠花.jpg" />
      <span class="photo-title">海棠花</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%b5%b7%e6%a3%a0%e8%8a%b11.jpg" alt="海棠花1.jpg" />
      <span class="photo-title">海棠花1</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e6%b9%96%e8%be%b9%e5%a4%95%e9%98%b3.jpg" alt="湖边夕阳.jpg" />
      <span class="photo-title">湖边夕阳</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e9%87%8d%e5%ba%86%e6%b4%aa%e5%b4%96%e6%b4%9e.jpg" alt="重庆洪崖洞.jpg" />
      <span class="photo-title">重庆洪崖洞</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e9%87%8d%e5%ba%86%e6%b4%aa%e5%b4%96%e6%b4%9e%e5%af%b9%e9%9d%a2.jpg" alt="重庆洪崖洞对面.jpg" />
      <span class="photo-title">重庆洪崖洞对面</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e9%87%8d%e5%ba%86%e6%b4%aa%e5%b4%96%e6%b4%9e%e5%af%b9%e9%9d%a21.jpg" alt="重庆洪崖洞对面1.jpg" />
      <span class="photo-title">重庆洪崖洞对面1</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e9%94%a6%e9%87%8c%e7%9a%84%e5%a4%a7%e6%a0%91.jpg" alt="锦里的大树.jpg" />
      <span class="photo-title">锦里的大树</span>
    </div>
    <div class="gallery-photo">
      <img class="photo-img" loading='lazy' decoding="async" src="https://zynismus16.github.io//atlas/everyday/%e9%9b%be%e4%b8%ad%e4%b9%8b%e6%a3%ae.jpg" alt="雾中之森.jpg" />
      <span class="photo-title">雾中之森</span>
    </div>
</div>

<script>
  function waterfall(a) {
	function b(a, b) {
		var c = window.getComputedStyle(b);
		return parseFloat(c["margin" + a]) || 0
	}

	function c(a) {
		return a + "px"
	}

	function d(a) {
		return parseFloat(a.style.top)
	}

	function e(a) {
		return parseFloat(a.style.left)
	}

	function f(a) {
		return a.clientWidth
	}

	function g(a) {
		return a.clientHeight
	}

	function h(a) {
		return d(a) + g(a) + b("Bottom", a)
	}

	function i(a) {
		return e(a) + f(a) + b("Right", a)
	}

	function j(a) {
		a = a.sort(function(a, b) {
			return h(a) === h(b) ? e(b) - e(a) : h(b) - h(a)
		})
	}

	function k(b) {
		f(a) != t && (b.target.removeEventListener(b.type, arguments.callee), waterfall(a))
	}
	"string" == typeof a && (a = document.querySelector(a));
	var l = [].map.call(a.children, function(a) {
		return a.style.position = "absolute", a
	});
	a.style.position = "relative";
	var m = [];
	l.length && (l[0].style.top = "0px", l[0].style.left = c(b("Left", l[0])), m.push(l[0]));
	for (var n = 1; n < l.length; n++) {
		var o = l[n - 1],
			p = l[n],
			q = i(o) + f(p) <= f(a);
		if (!q) break;
		p.style.top = o.style.top, p.style.left = c(i(o) + b("Left", p)), m.push(p)
	}
	for (; n < l.length; n++) {
		j(m);
		var p = l[n],
			r = m.pop();
		p.style.top = c(h(r) + b("Top", p)), p.style.left = c(e(r)), m.push(p)
	}
	j(m);
	var s = m[0];
	a.style.height = c(h(s) + b("Bottom", s));
	var t = f(a);
	window.addEventListener ? window.addEventListener("resize", k) : document.body.onresize = k
}
</script>
<script>
  ! function() {
	this.loaded = 0, this.failed = 0, this.total = 0, this.watch = function(a, b) {
		var c = document.querySelectorAll(a);
		if (!c.length) return console.log("[imgStatus]: There aren't any images associated with this selector (" + a + ")!");
		this.total = c.length;
		for (var d = 0; d < this.total; d++) isCached(c[d].src) ? this._setLoaded(b) : c[d].addEventListener ? (c[d].addEventListener("load", this._setLoaded.bind(this, b)), c[d].addEventListener("error", this._setFailed.bind(this, b))) : (c[d].attachEvent("onload", this._setLoaded.bind(this, b)), c[d].attachEvent("onerror", this._setFailed.bind(this, b)))
	}, this.isCached = function(a) {
		var b = new Image;
		return b.src = a, b.complete
	}, this._setFailed = function(a, b) {
		++this.failed, "function" == typeof a && a(this)
	}, this._setLoaded = function(a, b) {
		++this.loaded, "function" == typeof a && a(this)
	}, this.isDone = function() {
		return this.loaded + this.failed === this.total ? !0 : !1
	}, "object" == typeof window && (window.imgStatus = this)
}();
</script>
<script>
document.addEventListener('DOMContentLoaded', () => {
let galleryPhotos = document.querySelectorAll('.gallery-photos') || ''
if(galleryPhotos){
  imgStatus.watch('.gallery-photo img', function(imgs) {
    if(imgs.isDone()){
      for(var i=0;i < galleryPhotos.length;i++){
        waterfall(galleryPhotos[i]);
        let pagePhoto = galleryPhotos[i].querySelectorAll('.gallery-photo');
        for(var j=0;j < pagePhoto.length;j++){pagePhoto[j].className += " visible"};
      }
    }
  });
  window.addEventListener('resize', function () {
    for(var i=0;i < galleryPhotos.length;i++){
      waterfall(galleryPhotos[i]);
    }
  });
}
});
</script>
 
<script type="text/javascript">
  var $jscomp = $jscomp || {};
  $jscomp.scope = {};
  $jscomp.createTemplateTagFirstArg = function(b) {
	  return b.raw = b
  };
  $jscomp.createTemplateTagFirstArgWithRaw = function(b, a) {
	  b.raw = a;
	  return b
  };
  $jscomp.arrayIteratorImpl = function(b) {
	var a = 0;
	return function() {
		return a < b.length ? {
			done: !1,
			value: b[a++]
		} : {
			done: !0
		}
	}
};
  $jscomp.arrayIterator = function(b) {
	return {
		next: $jscomp.arrayIteratorImpl(b)
	}
};
  $jscomp.makeIterator = function(b) {
	  var a = "undefined" != typeof Symbol && Symbol.iterator && b[Symbol.iterator];
	  return a ? a.call(b) : $jscomp.arrayIterator(b)
  };
  $jscomp.arrayFromIterator = function(b) {
	  for (var a, d = []; !(a = b.next())
		  .done;) d.push(a.value);
	  return d
  };
    $jscomp.arrayFromIterable = function(b) {
	    return b instanceof Array ? b : $jscomp.arrayFromIterator($jscomp.makeIterator(b))
    };
  (function() {
	window.ViewImage = new function() {
		var b = this;
		this.target = "[view-image] img";
		this.listener = function(a) {
			if (!(a.ctrlKey || a.metaKey || a.shiftKey || a.altKey)) {
				var d = String(b.target.split(",")
						.map(function(g) {
							return g.trim() + ":not([no-view])"
						})),
					c = a.target.closest(d);
				if (c) {
					var e = c.closest("[view-image]") || document.body;
					d = [].concat($jscomp.arrayFromIterable(e.querySelectorAll(d)))
						.map(function(g) {
							return g.href || g.src
						});
					b.display(d, c.href || c.src);
					a.stopPropagation();
					a.preventDefault()
				}
			}
		};
		this.init = function(a) {
			a && (b.target = a);
			["removeEventListener", "addEventListener"].forEach(function(d) {
				document[d]("click", b.listener, !1)
			})
		};
		this.display = function(a, d) {
			var c = a.indexOf(d),
				e = (new DOMParser)
				.parseFromString('\n                <div class="view-image">\n                    <style>.view-image{position:fixed;inset:0;z-index:500;padding:1rem;display:flex;flex-direction:column;animation:view-image-in 300ms;backdrop-filter:blur(20px);-webkit-backdrop-filter:blur(20px)}.view-image__out{animation:view-image-out 300ms}@keyframes view-image-in{0%{opacity:0}}@keyframes view-image-out{100%{opacity:0}}.view-image-btn{width:32px;height:32px;display:flex;justify-content:center;align-items:center;cursor:pointer;border-radius:3px;background-color:rgba(255,255,255,0.2)}.view-image-btn:hover{background-color:rgba(255,255,255,0.5)}.view-image-close__full{position:absolute;inset:0;background-color:rgba(48,55,66,0.3);z-index:unset;cursor:zoom-out;margin:0}.view-image-container{height:0;flex:1;display:flex;align-items:center;justify-content:center;}.view-image-lead{display:contents}.view-image-lead img{position:relative;z-index:1;max-width:100%;max-height:100%;object-fit:contain;border-radius:3px}.view-image-lead__in img{animation:view-image-lead-in 300ms}.view-image-lead__out img{animation:view-image-lead-out 300ms forwards}@keyframes view-image-lead-in{0%{opacity:0;transform:translateY(-20px)}}@keyframes view-image-lead-out{100%{opacity:0;transform:translateY(20px)}}[class*=__out] ~ .view-image-loading{display:block}.view-image-loading{position:absolute;inset:50%;width:8rem;height:2rem;color:#aab2bd;overflow:hidden;text-align:center;margin:-1rem -4rem;z-index:1;display:none}.view-image-loading::after{content:"";position:absolute;inset:50% 0;width:100%;height:3px;background:rgba(255,255,255,0.5);transform:translateX(-100%) translateY(-50%);animation:view-image-loading 800ms -100ms ease-in-out infinite}@keyframes view-image-loading{0%{transform:translateX(-100%)}100%{transform:translateX(100%)}}.view-image-tools{position:relative;display:flex;justify-content:space-between;align-content:center;color:#fff;max-width:600px;position: absolute; bottom: 5%; left: 1rem; right: 1rem; backdrop-filter: blur(10px);margin:0 auto;padding:10px;border-radius:5px;background:rgba(0,0,0,0.1);margin-bottom:constant(safe-area-inset-bottom);margin-bottom:env(safe-area-inset-bottom);z-index:1}.view-image-tools__count{width:60px;display:flex;align-items:center;justify-content:center}.view-image-tools__flip{display:flex;gap:10px}.view-image-tools [class*=-close]{margin:0 10px}</style>\n                    <div class="view-image-container">\n                        <div class="view-image-lead"></div>\n                        <div class="view-image-loading"></div>\n                        <div class="view-image-close view-image-close__full"></div>\n                    </div>\n                    <div class="view-image-tools">\n                        <div class="view-image-tools__count">\n                            <span><b class="view-image-index">' +
					(c + 1) + "</b>/" + a.length + '</span>\n                        </div>\n                        <div class="view-image-tools__flip">\n                            <div class="view-image-btn view-image-tools__flip-prev">\n                                <svg width="20" height="20" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M31 36L19 24L31 12" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>\n                            </div>\n                            <div class="view-image-btn view-image-tools__flip-next">\n                                <svg width="20" height="20" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M19 12L31 24L19 36" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>\n                            </div>\n                        </div>\n                        <div class="view-image-btn view-image-close">\n                            <svg width="16" height="16" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="48" height="48" fill="white" fill-opacity="0.01"/><path d="M8 8L40 40" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/><path d="M8 40L40 8" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/></svg>\n                        </div>\n                    </div>\n                </div>\n            ', "text/html")
				.body.firstChild,
				g = function(f) {
					var h = {
						Escape: "close",
						ArrowLeft: "tools__flip-prev",
						ArrowRight: "tools__flip-next"
					};
					h[f.key] && e.querySelector(".view-image-" + h[f.key])
						.click()
				},
				l = function(f) {
					var h = new Image,
						k = e.querySelector(".view-image-lead");
					k.className = "view-image-lead view-image-lead__out";
					setTimeout(function() {
						k.innerHTML = "";
						h.onload = function() {
							setTimeout(function() {
								k.innerHTML = '<img src="' + h.src + '" alt="ViewImage" no-view/>';
								k.className = "view-image-lead view-image-lead__in"
							}, 100)
						};
						h.src = f
					}, 300)
				};
			document.body.appendChild(e);
			l(d);
			window.addEventListener("keydown", g);
			e.onclick = function(f) {
				f.target.closest(".view-image-close") ? (window.removeEventListener("keydown", g), e.onclick = null, e.classList.add("view-image__out"), setTimeout(function() {
					return e.remove()
				}, 290)) : f.target.closest(".view-image-tools__flip") && (c = f.target.closest(".view-image-tools__flip-prev") ? 0 === c ? a.length - 1 : c - 1 : c === a.length - 1 ? 0 : c + 1, l(a[c]), e.querySelector(".view-image-index")
					.innerHTML = c + 1)
			}
		}
	}
})();
</script>
<script>
  window.ViewImage && ViewImage.init('.gallery-photo img')
</script>
]]></content:encoded>
    </item>
    
    
    
    <item>
      <title>说说</title>
      <link>https://zynismus16.github.io/say/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zynismus16.github.io/say/</guid>
      <description></description>
      <content:encoded><![CDATA[]]></content:encoded>
    </item>
    
  </channel>
</rss>
